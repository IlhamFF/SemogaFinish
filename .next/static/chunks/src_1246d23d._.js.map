{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 583, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28authenticated%29/pimpinan/dashboard/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Users, TrendingUp, BookOpenCheck, BarChartHorizontalBig, Star, CheckCircle } from \"lucide-react\";\nimport { useAuth } from \"@/hooks/use-auth\";\nimport { Bar, BarChart, ResponsiveContainer, XAxis, YAxis, Tooltip, Legend, CartesianGrid } from \"recharts\";\nimport { ChartConfig, ChartContainer, ChartTooltipContent } from \"@/components/ui/chart\";\nimport { MOCK_SUBJECTS, SCHOOL_GRADE_LEVELS, SCHOOL_MAJORS, SCHOOL_CLASSES_PER_MAJOR_GRADE } from \"@/lib/constants\";\nimport React, { useMemo } from \"react\";\n\ninterface StudentMockGrade {\n  studentId: string;\n  studentName: string;\n  studentClass: string;\n  grades: { subject: string; score: number }[];\n  average: number;\n}\n\nconst generateMockStudentGrades = (allAppUsers: ReturnType<typeof useAuth>['users']): StudentMockGrade[] => {\n  const siswaUsers = allAppUsers.filter(u => u.role === 'siswa' && u.isVerified && u.kelas);\n  \n  return siswaUsers.map(siswa => {\n    const studentSubjects = MOCK_SUBJECTS.slice(0, Math.floor(Math.random() * 5) + 8); // 8 to 12 subjects\n    const grades = studentSubjects.map(subject => ({\n      subject,\n      score: Math.floor(Math.random() * 41) + 60, // Score between 60 and 100\n    }));\n    const average = grades.reduce((sum, g) => sum + g.score, 0) / grades.length;\n    return {\n      studentId: siswa.id,\n      studentName: siswa.fullName || siswa.name || siswa.email,\n      studentClass: siswa.kelas!,\n      grades,\n      average: parseFloat(average.toFixed(2)),\n    };\n  });\n};\n\n\nexport default function PimpinanDashboardPage() {\n  const { user, users: allAppUsers } = useAuth();\n\n  const mockStudentGradesData: StudentMockGrade[] = useMemo(() => {\n      if(allAppUsers.length > 0) {\n          return generateMockStudentGrades(allAppUsers);\n      }\n      return [];\n  }, [allAppUsers]);\n\n  const classAverages = useMemo(() => {\n    if (mockStudentGradesData.length === 0) return [];\n    const classData: { [key: string]: { totalScore: number; count: number } } = {};\n    mockStudentGradesData.forEach(student => {\n      if (!classData[student.studentClass]) {\n        classData[student.studentClass] = { totalScore: 0, count: 0 };\n      }\n      classData[student.studentClass].totalScore += student.average;\n      classData[student.studentClass].count++;\n    });\n    return Object.entries(classData)\n      .map(([className, data]) => ({\n        name: className,\n        rataRata: parseFloat((data.totalScore / data.count).toFixed(2)),\n      }))\n      .sort((a, b) => b.rataRata - a.rataRata); // Sort by average desc\n  }, [mockStudentGradesData]);\n  \n  const chartConfigClassAvg = {\n    rataRata: {\n      label: \"Rata-rata Nilai\",\n      color: \"hsl(var(--primary))\",\n    },\n  } satisfies ChartConfig;\n\n  const overallRankedStudents = useMemo(() => \n    [...mockStudentGradesData].sort((a, b) => b.average - a.average)\n  , [mockStudentGradesData]);\n\n  const getClassRankings = (className: string) => {\n    return mockStudentGradesData\n      .filter(s => s.studentClass === className)\n      .sort((a, b) => b.average - a.average);\n  };\n\n  // Pick some example classes for detailed ranking display\n  const exampleClassesForRanking = useMemo(() => {\n    const allClasses = [...new Set(mockStudentGradesData.map(s => s.studentClass))];\n    return allClasses.slice(0, 2); // Show rankings for first 2 classes\n  }, [mockStudentGradesData]);\n\n\n  const pimpinanStats = useMemo(() => {\n    const totalSiswa = allAppUsers.filter(u => u.role === 'siswa').length;\n    const totalGuru = allAppUsers.filter(u => u.role === 'guru').length;\n    const totalKelas = new Set(allAppUsers.filter(u => u.role === 'siswa' && u.kelas).map(u => u.kelas)).size;\n    \n    return [\n      { title: \"Total Siswa\", value: totalSiswa.toString(), icon: Users, color: \"text-primary\", change: `SMA Az-Bail` },\n      { title: \"Total Guru\", value: totalGuru.toString(), icon: Users, color: \"text-green-500\", change: \"Tenaga Pengajar\" },\n      { title: \"Jumlah Kelas\", value: totalKelas.toString(), icon: BookOpenCheck, color: \"text-yellow-500\", change: \"IPA & IPS\" },\n      { title: \"Tingkat Kelulusan (Simulasi)\", value: \"95%\", icon: CheckCircle, color: \"text-indigo-500\", change: \"Target: 90%\" },\n    ];\n  }, [allAppUsers]);\n\n\n  if (!user || (user.role !== 'pimpinan' && user.role !== 'superadmin')) {\n    return <p>Akses Ditolak. Anda harus menjadi Pimpinan untuk melihat halaman ini.</p>;\n  }\n  \n  if (mockStudentGradesData.length === 0 && allAppUsers.length > 0) {\n    // Still waiting for mockStudentGradesData to be populated if allAppUsers exists\n    return <p>Memuat data siswa...</p>;\n  }\n\n\n  return (\n    <div className=\"space-y-6\">\n      <h1 className=\"text-3xl font-headline font-semibold\">Dasbor Pimpinan SMA Az-Bail</h1>\n      <p className=\"text-muted-foreground\">Selamat datang, {user.fullName || user.name || user.email}! Gambaran umum kinerja institusi dan metrik utama.</p>\n      \n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        {pimpinanStats.map((card) => (\n          <Card key={card.title} className=\"shadow-lg hover:shadow-xl transition-shadow\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">{card.title}</CardTitle>\n              <card.icon className={`h-5 w-5 ${card.color}`} />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">{card.value}</div>\n              <p className=\"text-xs text-muted-foreground\">{card.change}</p>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <Card className=\"shadow-lg\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center\">\n              <BarChartHorizontalBig className=\"mr-2 h-5 w-5 text-primary\" />\n              Rata-rata Nilai per Kelas\n            </CardTitle>\n            <CardDescription>Visualisasi dan tabel rata-rata nilai akhir siswa per kelas.</CardDescription>\n          </CardHeader>\n          <CardContent>\n            {classAverages.length > 0 ? (\n              <>\n                <div className=\"h-[300px] mb-6\">\n                  <ChartContainer config={chartConfigClassAvg} className=\"w-full h-full\">\n                    <BarChart data={classAverages} layout=\"vertical\" margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                       <CartesianGrid strokeDasharray=\"3 3\" horizontal={false} />\n                      <XAxis type=\"number\" domain={[0, 100]} stroke=\"hsl(var(--foreground))\" fontSize={12} />\n                      <YAxis dataKey=\"name\" type=\"category\" stroke=\"hsl(var(--foreground))\" fontSize={10} width={80} interval={0} />\n                      <Tooltip content={<ChartTooltipContent />} cursor={{ fill: 'hsl(var(--muted))' }}/>\n                      <Legend />\n                      <Bar dataKey=\"rataRata\" fill=\"var(--color-rataRata)\" radius={[0, 4, 4, 0]} barSize={15} />\n                    </BarChart>\n                  </ChartContainer>\n                </div>\n                <div className=\"max-h-[200px] overflow-y-auto\">\n                    <Table>\n                        <TableHeader>\n                        <TableRow>\n                            <TableHead>Kelas</TableHead>\n                            <TableHead className=\"text-right\">Rata-rata Nilai</TableHead>\n                        </TableRow>\n                        </TableHeader>\n                        <TableBody>\n                        {classAverages.map((item) => (\n                            <TableRow key={item.name}>\n                            <TableCell className=\"font-medium\">{item.name}</TableCell>\n                            <TableCell className=\"text-right font-semibold\">{item.rataRata.toFixed(2)}</TableCell>\n                            </TableRow>\n                        ))}\n                        </TableBody>\n                    </Table>\n                </div>\n              </>\n            ) : (\n              <p className=\"text-muted-foreground text-center py-4\">Data rata-rata kelas belum tersedia.</p>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card className=\"shadow-lg\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center\">\n              <Star className=\"mr-2 h-5 w-5 text-yellow-500\" />\n              Peringkat Siswa Terbaik (Keseluruhan)\n            </CardTitle>\n            <CardDescription>10 siswa dengan rata-rata nilai tertinggi di seluruh sekolah.</CardDescription>\n          </CardHeader>\n          <CardContent>\n            {overallRankedStudents.length > 0 ? (\n              <div className=\"max-h-[500px] overflow-y-auto\">\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead className=\"w-[50px]\">Rank</TableHead>\n                      <TableHead>Nama Siswa</TableHead>\n                      <TableHead>Kelas</TableHead>\n                      <TableHead className=\"text-right\">Rata-rata</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {overallRankedStudents.slice(0, 10).map((student, index) => (\n                      <TableRow key={student.studentId}>\n                        <TableCell className=\"font-medium\">{index + 1}</TableCell>\n                        <TableCell>{student.studentName}</TableCell>\n                        <TableCell>{student.studentClass}</TableCell>\n                        <TableCell className=\"text-right font-semibold\">{student.average.toFixed(2)}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </div>\n            ) : (\n              <p className=\"text-muted-foreground text-center py-4\">Data peringkat siswa belum tersedia.</p>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      {exampleClassesForRanking.map(className => (\n        <Card key={className} className=\"shadow-lg\">\n          <CardHeader>\n            <CardTitle>Peringkat Siswa Kelas: {className}</CardTitle>\n            <CardDescription>Siswa dengan rata-rata nilai tertinggi di kelas {className}.</CardDescription>\n          </CardHeader>\n          <CardContent>\n            {getClassRankings(className).length > 0 ? (\n                 <div className=\"max-h-[300px] overflow-y-auto\">\n                    <Table>\n                        <TableHeader>\n                        <TableRow>\n                            <TableHead className=\"w-[50px]\">Rank</TableHead>\n                            <TableHead>Nama Siswa</TableHead>\n                            <TableHead className=\"text-right\">Rata-rata</TableHead>\n                        </TableRow>\n                        </TableHeader>\n                        <TableBody>\n                        {getClassRankings(className).slice(0, 10).map((student, index) => (\n                            <TableRow key={student.studentId}>\n                            <TableCell className=\"font-medium\">{index + 1}</TableCell>\n                            <TableCell>{student.studentName}</TableCell>\n                            <TableCell className=\"text-right font-semibold\">{student.average.toFixed(2)}</TableCell>\n                            </TableRow>\n                        ))}\n                        </TableBody>\n                    </Table>\n                </div>\n            ) : (\n              <p className=\"text-muted-foreground text-center py-4\">Data peringkat untuk kelas {className} belum tersedia.</p>\n            )}\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}}]
}