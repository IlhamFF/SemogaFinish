{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/lib/auth-utils.ts"],"sourcesContent":["\nimport { jwtVerify } from 'jose';\nimport type { NextRequest } from 'next/server';\nimport type { Role as AppRole } from '@/types';\n\n// Key for 'jose' must be a Uint8Array.\nconst JWT_SECRET = new TextEncoder().encode(\n  process.env.JWT_SECRET || 'your-super-secret-jwt-key-please-change-this'\n);\nexport const TOKEN_NAME = 'auth_token';\n\nexport interface UserPayload {\n  id: string;\n  email: string;\n  role: AppRole;\n  isVerified: boolean;\n  kelasId?: string | null;\n}\n\n/**\n * Verifies a JWT using 'jose' and returns its payload if valid.\n * This function is safe for the Edge runtime.\n * @param token The JWT string to verify.\n * @returns A promise that resolves to the decoded UserPayload or null.\n */\nexport async function verifyToken(token: string): Promise<UserPayload | null> {\n  try {\n    const { payload } = await jwtVerify(token, JWT_SECRET);\n    // The payload from jwtVerify is a JWT.Payload object, which is indexable.\n    // We cast it to our UserPayload type.\n    return payload as unknown as UserPayload;\n  } catch (error) {\n    // It's common for this to fail (e.g., expired token), so we don't need to log every error.\n    // console.error('Invalid token (Edge):', error);\n    return null;\n  }\n}\n\n/**\n * Extracts the JWT from the cookies of a NextRequest.\n * Safe for Edge runtime.\n * @param req The incoming NextRequest.\n * @returns The token string or null if not found.\n */\nexport function getTokenFromRequest(req: NextRequest): string | null {\n  const cookies = req.cookies.get(TOKEN_NAME);\n  return cookies?.value || null;\n}\n\n/**\n * Retrieves the authenticated user payload from the request token.\n * A convenient utility combining token extraction and verification for the Edge.\n * @returns A promise that resolves to the UserPayload or null if the user is not authenticated.\n */\nexport async function getAuthenticatedUser(req: NextRequest): Promise<UserPayload | null> {\n  const token = getTokenFromRequest(req);\n  if (!token) {\n    return null;\n  }\n  return await verifyToken(token);\n}\n"],"names":[],"mappings":";;;;;;AACA;;AAIA,uCAAuC;AACvC,MAAM,aAAa,IAAI,cAAc,MAAM,CACzC,QAAQ,GAAG,CAAC,UAAU,IAAI;AAErB,MAAM,aAAa;AAgBnB,eAAe,YAAY,KAAa;IAC7C,IAAI;QACF,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,CAAA,GAAA,gKAAA,CAAA,YAAS,AAAD,EAAE,OAAO;QAC3C,0EAA0E;QAC1E,sCAAsC;QACtC,OAAO;IACT,EAAE,OAAO,OAAO;QACd,2FAA2F;QAC3F,iDAAiD;QACjD,OAAO;IACT;AACF;AAQO,SAAS,oBAAoB,GAAgB;IAClD,MAAM,UAAU,IAAI,OAAO,CAAC,GAAG,CAAC;IAChC,OAAO,SAAS,SAAS;AAC3B;AAOO,eAAe,qBAAqB,GAAgB;IACzD,MAAM,QAAQ,oBAAoB;IAClC,IAAI,CAAC,OAAO;QACV,OAAO;IACT;IACA,OAAO,MAAM,YAAY;AAC3B"}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/lib/constants.ts"],"sourcesContent":["\nimport type { Role } from '@/types';\n// Lucide-react icons are removed from this file\n\nexport const APP_NAME = 'EduCentral SMA Az-Bail';\n\nexport const ROLES: Record<Role, string> = {\n  admin: 'Admin',\n  guru: 'Guru',\n  siswa: 'Siswa',\n  pimpinan: 'Pimpinan',\n  superadmin: 'Super Admin',\n};\n\nexport const ROUTES = {\n  HOME: '/',\n  LOGIN: '/login',\n  REGISTER: '/register',\n  VERIFY_EMAIL: '/verify-email',\n  FORGOT_PASSWORD: '/forgot-password',\n  RESET_PASSWORD: '/reset-password',\n  \n  ADMIN_DASHBOARD: '/admin/dashboard',\n  ADMIN_USERS: '/admin/users',\n  ADMIN_KURIKULUM: '/admin/kurikulum',\n  ADMIN_MATA_PELAJARAN: '/admin/mata-pelajaran',\n  ADMIN_JADWAL: '/admin/jadwal',\n  ADMIN_KELAS: '/admin/kelas',\n  \n  GURU_DASHBOARD: '/guru/dashboard',\n  GURU_PENGAJARAN: '/guru/pengajaran',\n  GURU_TUGAS: '/guru/tugas',\n  GURU_ABSENSI: '/guru/absensi',\n  GURU_MATERI: '/guru/materi',\n  GURU_TEST: '/guru/test',\n  GURU_PENILAIAN: '/guru/penilaian',\n\n  SISWA_DASHBOARD: '/siswa/dashboard',\n  SISWA_JADWAL: '/siswa/jadwal',\n  SISWA_TUGAS: '/siswa/tugas',\n  SISWA_MATERI: '/siswa/materi',\n  SISWA_TEST: '/siswa/test',\n  SISWA_NILAI: '/siswa/nilai',\n\n  PIMPINAN_DASHBOARD: '/pimpinan/dashboard',\n  \n  DATA_VISUALIZATION: '/data-visualization',\n  NOTIFICATIONS: '/notifications', \n  SETTINGS: '/settings', \n};\n\nexport const DEFAULT_USERS_STORAGE_KEY = 'sma_azbail_users_mock';\nexport const AUTH_USER_STORAGE_KEY = 'sma_azbail_auth_user_mock';\n\nexport const SCHOOL_MAJORS = [\"IPA\", \"IPS\"];\nexport const SCHOOL_GRADE_LEVELS = [\"X\", \"XI\", \"XII\"];\nexport const SCHOOL_CLASSES_PER_MAJOR_GRADE = 5;\n\nexport const MOCK_SUBJECTS = [\n  \"Matematika Wajib\", \"Bahasa Indonesia\", \"Bahasa Inggris\", \"Pendidikan Agama\", \"PPKn\", \"Sejarah Indonesia\",\n  \"Fisika\", \"Kimia\", \"Biologi\", \"Matematika Peminatan\", // IPA\n  \"Geografi\", \"Sosiologi\", \"Ekonomi\", \"Sejarah Peminatan\" // IPS\n];\n\nexport const KATEGORI_MAPEL = [\n  \"Wajib Umum\",\n  \"Wajib Peminatan IPA\",\n  \"Wajib Peminatan IPS\",\n  \"Pilihan Lintas Minat\",\n  \"Muatan Lokal\",\n] as const;\n\n// Constants moved from types/index.ts as they don't depend on other types and are used broadly\nexport const KATEGORI_SKL_CONST = [\"Sikap\", \"Pengetahuan\", \"Keterampilan\"] as const;\nexport const FASE_CP_CONST = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"Lainnya\"] as const;\nexport const JENIS_MATERI_AJAR = [\"File\", \"Link\"] as const;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAIO,MAAM,WAAW;AAEjB,MAAM,QAA8B;IACzC,OAAO;IACP,MAAM;IACN,OAAO;IACP,UAAU;IACV,YAAY;AACd;AAEO,MAAM,SAAS;IACpB,MAAM;IACN,OAAO;IACP,UAAU;IACV,cAAc;IACd,iBAAiB;IACjB,gBAAgB;IAEhB,iBAAiB;IACjB,aAAa;IACb,iBAAiB;IACjB,sBAAsB;IACtB,cAAc;IACd,aAAa;IAEb,gBAAgB;IAChB,iBAAiB;IACjB,YAAY;IACZ,cAAc;IACd,aAAa;IACb,WAAW;IACX,gBAAgB;IAEhB,iBAAiB;IACjB,cAAc;IACd,aAAa;IACb,cAAc;IACd,YAAY;IACZ,aAAa;IAEb,oBAAoB;IAEpB,oBAAoB;IACpB,eAAe;IACf,UAAU;AACZ;AAEO,MAAM,4BAA4B;AAClC,MAAM,wBAAwB;AAE9B,MAAM,gBAAgB;IAAC;IAAO;CAAM;AACpC,MAAM,sBAAsB;IAAC;IAAK;IAAM;CAAM;AAC9C,MAAM,iCAAiC;AAEvC,MAAM,gBAAgB;IAC3B;IAAoB;IAAoB;IAAkB;IAAoB;IAAQ;IACtF;IAAU;IAAS;IAAW;IAC9B;IAAY;IAAa;IAAW,oBAAoB,MAAM;CAC/D;AAEM,MAAM,iBAAiB;IAC5B;IACA;IACA;IACA;IACA;CACD;AAGM,MAAM,qBAAqB;IAAC;IAAS;IAAe;CAAe;AACnE,MAAM,gBAAgB;IAAC;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;CAAU;AAC/D,MAAM,oBAAoB;IAAC;IAAQ;CAAO"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["\nimport { NextRequest, NextResponse } from 'next/server';\nimport { getTokenFromRequest, verifyToken } from '@/lib/auth-utils';\nimport { ROUTES } from '@/lib/constants';\n\nconst protectedPaths = [\n  '/admin', \n  '/guru', \n  '/siswa', \n  '/pimpinan', \n  '/settings', \n  '/data-visualization',\n  // Add other paths that require authentication\n];\n\nconst authRoutes = [\n  ROUTES.LOGIN, \n  ROUTES.REGISTER, \n  ROUTES.FORGOT_PASSWORD, \n  ROUTES.RESET_PASSWORD\n];\n\nexport async function middleware(request: NextRequest) {\n  const { pathname } = request.nextUrl;\n\n  // Allow API routes, Next.js specific paths, and public static assets\n  if (pathname.startsWith('/api/') || \n      pathname.startsWith('/_next/') || \n      pathname.includes('.') // typically static files\n     ) {\n    return NextResponse.next();\n  }\n\n  const token = getTokenFromRequest(request);\n  const userPayload = token ? await verifyToken(token) : null;\n\n  const isProtectedPath = protectedPaths.some(path => pathname.startsWith(path));\n\n  if (isProtectedPath) {\n    if (!userPayload) {\n      // Redirect to login if not authenticated and trying to access protected route\n      const loginUrl = new URL(ROUTES.LOGIN, request.url);\n      loginUrl.searchParams.set('callbackUrl', pathname);\n      return NextResponse.redirect(loginUrl);\n    }\n    // Additional role-based access control can be implemented here if needed\n    // For example:\n    // if (pathname.startsWith('/admin') && userPayload.role !== 'admin' && userPayload.role !== 'superadmin') {\n    //   return NextResponse.redirect(new URL(ROUTES.HOME, request.url)); // Or an unauthorized page\n    // }\n  }\n\n  if (authRoutes.includes(pathname) && userPayload) {\n    // If user is authenticated and tries to access login/register, redirect to their dashboard\n    let dashboardUrl = ROUTES.HOME;\n    switch (userPayload.role) {\n        case 'admin': dashboardUrl = ROUTES.ADMIN_DASHBOARD; break;\n        case 'guru': dashboardUrl = ROUTES.GURU_DASHBOARD; break;\n        case 'siswa': dashboardUrl = ROUTES.SISWA_DASHBOARD; break;\n        case 'pimpinan': dashboardUrl = ROUTES.PIMPINAN_DASHBOARD; break;\n        case 'superadmin': dashboardUrl = ROUTES.ADMIN_DASHBOARD; break;\n    }\n    return NextResponse.redirect(new URL(dashboardUrl, request.url));\n  }\n  \n  // Special handling for verify-email (now a placeholder, as custom auth doesn't have this flow by default)\n  if (pathname === ROUTES.VERIFY_EMAIL) {\n    if (userPayload && userPayload.isVerified) {\n        // If verified, redirect to dashboard\n        let dashboardUrl = ROUTES.HOME;\n        switch (userPayload.role) {\n            case 'admin': dashboardUrl = ROUTES.ADMIN_DASHBOARD; break;\n            case 'guru': dashboardUrl = ROUTES.GURU_DASHBOARD; break;\n            case 'siswa': dashboardUrl = ROUTES.SISWA_DASHBOARD; break;\n            case 'pimpinan': dashboardUrl = ROUTES.PIMPINAN_DASHBOARD; break;\n            case 'superadmin': dashboardUrl = ROUTES.ADMIN_DASHBOARD; break;\n        }\n        return NextResponse.redirect(new URL(dashboardUrl, request.url));\n    }\n    // If not verified, or no user, let them see the placeholder page\n    return NextResponse.next();\n  }\n\n\n  return NextResponse.next();\n}\n\nexport const config = {\n  matcher: [\n    // Match all request paths except for the ones starting with:\n    // - _next/static (static files)\n    // - _next/image (image optimization files)\n    // - favicon.ico (favicon file)\n    // '/((?!_next/static|_next/image|favicon.ico|.*\\\\..*).*)', // More restrictive\n    '/((?!_next/static|_next/image|favicon.ico).*)', // Matches pages and API routes\n  ],\n};\n"],"names":[],"mappings":"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"}}]
}