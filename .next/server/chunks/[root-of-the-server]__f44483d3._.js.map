{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/user.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, OneToMany, Index } from \"typeorm\";\nimport type { Role } from \"@/types\";\n// Removed AccountEntity, SessionEntity as they are NextAuth specific for DB adapter\nimport type { StrukturKurikulumEntity } from \"./struktur-kurikulum.entity\";\nimport type { MateriAjarEntity } from \"./materi-ajar.entity\";\nimport type { SilabusEntity } from \"./silabus.entity\";\nimport type { RppEntity } from \"./rpp.entity\";\nimport type { JadwalPelajaranEntity } from \"./jadwal-pelajaran.entity\";\nimport type { TugasEntity } from \"./tugas.entity\";\nimport type { TestEntity } from \"./test.entity\";\n\n@Entity({ name: \"users\" })\nexport class UserEntity {\n  @PrimaryGeneratedColumn(\"uuid\") // This remains the primary key for your local database\n  id!: string;\n\n  @Index({ unique: true, where: \"\\\"firebaseUid\\\" IS NOT NULL\" }) // Firebase UID should be unique if present\n  @Column({ type: \"varchar\", nullable: true }) // To store Firebase UID\n  firebaseUid?: string | null;\n\n  @Column({ type: \"varchar\", nullable: true })\n  name?: string | null; \n\n  @Index({ unique: true }) // Email should still be unique in your local DB\n  @Column({ type: \"varchar\" })\n  email!: string;\n\n  // emailVerified is now primarily managed by Firebase Auth, can be synced here\n  @Column({ type: \"timestamp\", nullable: true })\n  emailVerified?: Date | null;\n\n  @Column({ type: \"varchar\", nullable: true })\n  image?: string | null; // Corresponds to Firebase photoURL\n\n  // passwordHash is removed as Firebase handles passwords\n  // resetPasswordToken and resetPasswordExpires are removed\n\n  @Column({\n    type: \"enum\",\n    enum: ['admin', 'guru', 'siswa', 'pimpinan', 'superadmin'],\n    default: 'siswa'\n  })\n  role!: Role;\n\n  @Column({ type: \"boolean\", default: false }) // isVerified in local DB can reflect Firebase's emailVerified status\n  isVerified!: boolean; \n\n  @Column({ type: \"varchar\", nullable: true })\n  fullName?: string | null;\n\n  @Column({ type: \"varchar\", nullable: true })\n  phone?: string | null;\n\n  @Column({ type: \"text\", nullable: true })\n  address?: string | null;\n\n  @Column({ type: \"date\", nullable: true })\n  birthDate?: string | null; \n\n  @Column({ type: \"text\", nullable: true })\n  bio?: string | null;\n\n  @Column({ type: \"varchar\", nullable: true })\n  nis?: string | null; \n\n  @Column({ type: \"varchar\", nullable: true })\n  nip?: string | null; \n\n  @Column({ type: \"date\", nullable: true })\n  joinDate?: string | null; \n\n  @Column({ type: \"varchar\", nullable: true }) // Renamed from kelasId for consistency with User type\n  kelas?: string | null; \n\n  @Column({ type: \"varchar\", nullable: true }) // Changed from simple-array to varchar for simplicity with current form\n  mataPelajaran?: string | null;\n  \n  // Relations to other entities in your local database remain\n  @OneToMany(\"StrukturKurikulumEntity\", (ske: StrukturKurikulumEntity) => ske.guruPengampu)\n  strukturKurikulumDiajar?: StrukturKurikulumEntity[];\n\n  @OneToMany(\"MateriAjarEntity\", (materi: MateriAjarEntity) => materi.uploader)\n  materiAjarUploaded?: MateriAjarEntity[];\n\n  @OneToMany(\"SilabusEntity\", (silabus: SilabusEntity) => silabus.uploader)\n  silabusUploaded?: SilabusEntity[];\n\n  @OneToMany(\"RppEntity\", (rpp: RppEntity) => rpp.uploader)\n  rppUploaded?: RppEntity[];\n\n  @OneToMany(\"JadwalPelajaranEntity\", (jadwal: JadwalPelajaranEntity) => jadwal.guru)\n  jadwalMengajar?: JadwalPelajaranEntity[];\n\n  @OneToMany(\"TugasEntity\", (tugas: TugasEntity) => tugas.uploader)\n  tugasUploaded?: TugasEntity[];\n\n  @OneToMany(\"TestEntity\", (test: TestEntity) => test.uploader)\n  testUploaded?: TestEntity[];\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;;;;;;;AAYO,MAAM;IAEX,GAAY;IAIZ,YAA4B;IAG5B,KAAqB;IAIrB,MAAe;IAEf,8EAA8E;IAE9E,cAA4B;IAG5B,MAAsB;IAEtB,wDAAwD;IACxD,0DAA0D;IAO1D,KAAY;IAGZ,WAAqB;IAGrB,SAAyB;IAGzB,MAAsB;IAGtB,QAAwB;IAGxB,UAA0B;IAG1B,IAAoB;IAGpB,IAAoB;IAGpB,IAAoB;IAGpB,SAAyB;IAGzB,MAAsB;IAGtB,cAA8B;IAE9B,4DAA4D;IAE5D,wBAAoD;IAGpD,mBAAwC;IAGxC,gBAAkC;IAGlC,YAA0B;IAG1B,eAAyC;IAGzC,cAA8B;IAG9B,aAA4B;IAG5B,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QAxFW,QAAQ;QAAM,OAAO;;;QACpB,MAAM;QAAW,UAAU;;;;;;QAG3B,MAAM;QAAW,UAAU;;;;;;QAG5B,QAAQ;;;QACP,MAAM;;;;;;QAIN,MAAM;QAAa,UAAU;;;;;;QAG7B,MAAM;QAAW,UAAU;;;;;;QAOnC,MAAM;QACN,MAAM;YAAC;YAAS;YAAQ;YAAS;YAAY;SAAa;QAC1D,SAAS;;;;;;QAID,MAAM;QAAW,SAAS;;;;;;QAG1B,MAAM;QAAW,UAAU;;;;;;QAG3B,MAAM;QAAW,UAAU;;;;;;QAG3B,MAAM;QAAQ,UAAU;;;;;;QAGxB,MAAM;QAAQ,UAAU;;;;;;QAGxB,MAAM;QAAQ,UAAU;;;;;;QAGxB,MAAM;QAAW,UAAU;;;;;;QAG3B,MAAM;QAAW,UAAU;;;;;;QAG3B,MAAM;QAAQ,UAAU;;;;;;QAGxB,MAAM;QAAW,UAAU;;;;;;QAG3B,MAAM;QAAW,UAAU;;;;;sLAIE,MAAiC,IAAI,YAAY;;;;+KAGxD,SAA6B,OAAO,QAAQ;;;;4KAG/C,UAA2B,QAAQ,QAAQ;;;;wKAG/C,MAAmB,IAAI,QAAQ;;;;oLAGnB,SAAkC,OAAO,IAAI;;;;0KAGvD,QAAuB,MAAM,QAAQ;;;;yKAGtC,OAAqB,KAAK,QAAQ;;;;;QAGxC,MAAM;;;;;;QAGN,MAAM;;;;;;QA3FlB,MAAM","debugId":null}},
    {"offset": {"line": 453, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/constants.ts"],"sourcesContent":["\nimport type { Role } from '@/types';\n// Lucide-react icons are removed from this file\n\nexport const APP_NAME = 'EduCentral SMA Az-Bail';\n\nexport const ROLES: Record<Role, string> = {\n  admin: 'Admin',\n  guru: 'Guru',\n  siswa: 'Siswa',\n  pimpinan: 'Pimpinan',\n  superadmin: 'Super Admin',\n};\n\nexport const ROUTES = {\n  HOME: '/',\n  LOGIN: '/login',\n  REGISTER: '/register',\n  VERIFY_EMAIL: '/verify-email',\n  FORGOT_PASSWORD: '/forgot-password',\n  RESET_PASSWORD: '/reset-password',\n  \n  ADMIN_DASHBOARD: '/admin/dashboard',\n  ADMIN_USERS: '/admin/users',\n  ADMIN_KURIKULUM: '/admin/kurikulum',\n  ADMIN_MATA_PELAJARAN: '/admin/mata-pelajaran',\n  ADMIN_JADWAL: '/admin/jadwal',\n  \n  GURU_DASHBOARD: '/guru/dashboard',\n  GURU_PENGAJARAN: '/guru/pengajaran',\n  GURU_TUGAS: '/guru/tugas',\n  GURU_ABSENSI: '/guru/absensi',\n  GURU_MATERI: '/guru/materi',\n  GURU_TEST: '/guru/test',\n  GURU_PENILAIAN: '/guru/penilaian',\n\n  SISWA_DASHBOARD: '/siswa/dashboard',\n  SISWA_JADWAL: '/siswa/jadwal',\n  SISWA_TUGAS: '/siswa/tugas',\n  SISWA_MATERI: '/siswa/materi',\n  SISWA_TEST: '/siswa/test',\n  SISWA_NILAI: '/siswa/nilai',\n\n  PIMPINAN_DASHBOARD: '/pimpinan/dashboard',\n  \n  DATA_VISUALIZATION: '/data-visualization',\n  NOTIFICATIONS: '/notifications', \n  SETTINGS: '/settings', \n};\n\n// These mock storage keys are no longer relevant with Firebase Auth\n// export const DEFAULT_USERS_STORAGE_KEY = 'sma_azbail_users_mock';\n// export const AUTH_USER_STORAGE_KEY = 'sma_azbail_auth_user_mock';\n\nexport const SCHOOL_MAJORS = [\"IPA\", \"IPS\"];\nexport const SCHOOL_GRADE_LEVELS = [\"X\", \"XI\", \"XII\"];\nexport const SCHOOL_CLASSES_PER_MAJOR_GRADE = 5;\n\nexport const MOCK_SUBJECTS = [\n  \"Matematika Wajib\", \"Bahasa Indonesia\", \"Bahasa Inggris\", \"Pendidikan Agama\", \"PPKn\", \"Sejarah Indonesia\",\n  \"Fisika\", \"Kimia\", \"Biologi\", \"Matematika Peminatan\", // IPA\n  \"Geografi\", \"Sosiologi\", \"Ekonomi\", \"Sejarah Peminatan\" // IPS\n];\n\nexport const KATEGORI_MAPEL = [\n  \"Wajib Umum\",\n  \"Wajib Peminatan IPA\",\n  \"Wajib Peminatan IPS\",\n  \"Pilihan Lintas Minat\",\n  \"Muatan Lokal\",\n] as const;\n\n// Constants moved from types/index.ts as they don't depend on other types and are used broadly\nexport const KATEGORI_SKL_CONST = [\"Sikap\", \"Pengetahuan\", \"Keterampilan\"] as const;\nexport const FASE_CP_CONST = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"Lainnya\"] as const;\nexport const JENIS_MATERI_AJAR = [\"File\", \"Link\"] as const;\n"],"names":[],"mappings":";;;;;;;;;;;;;AAIO,MAAM,WAAW;AAEjB,MAAM,QAA8B;IACzC,OAAO;IACP,MAAM;IACN,OAAO;IACP,UAAU;IACV,YAAY;AACd;AAEO,MAAM,SAAS;IACpB,MAAM;IACN,OAAO;IACP,UAAU;IACV,cAAc;IACd,iBAAiB;IACjB,gBAAgB;IAEhB,iBAAiB;IACjB,aAAa;IACb,iBAAiB;IACjB,sBAAsB;IACtB,cAAc;IAEd,gBAAgB;IAChB,iBAAiB;IACjB,YAAY;IACZ,cAAc;IACd,aAAa;IACb,WAAW;IACX,gBAAgB;IAEhB,iBAAiB;IACjB,cAAc;IACd,aAAa;IACb,cAAc;IACd,YAAY;IACZ,aAAa;IAEb,oBAAoB;IAEpB,oBAAoB;IACpB,eAAe;IACf,UAAU;AACZ;AAMO,MAAM,gBAAgB;IAAC;IAAO;CAAM;AACpC,MAAM,sBAAsB;IAAC;IAAK;IAAM;CAAM;AAC9C,MAAM,iCAAiC;AAEvC,MAAM,gBAAgB;IAC3B;IAAoB;IAAoB;IAAkB;IAAoB;IAAQ;IACtF;IAAU;IAAS;IAAW;IAC9B;IAAY;IAAa;IAAW,oBAAoB,MAAM;CAC/D;AAEM,MAAM,iBAAiB;IAC5B;IACA;IACA;IACA;IACA;CACD;AAGM,MAAM,qBAAqB;IAAC;IAAS;IAAe;CAAe;AACnE,MAAM,gBAAgB;IAAC;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;CAAU;AAC/D,MAAM,oBAAoB;IAAC;IAAQ;CAAO","debugId":null}},
    {"offset": {"line": 561, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/mata-pelajaran.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, Index, OneToMany } from \"typeorm\";\nimport { KATEGORI_MAPEL } from \"@/lib/constants\";\nimport type { KategoriMapelType } from \"@/entities/mata-pelajaran.entity\"; \nimport type { StrukturKurikulumEntity } from \"./struktur-kurikulum.entity\";\nimport type { SilabusEntity } from \"./silabus.entity\";\nimport type { RppEntity } from \"./rpp.entity\";\nimport type { JadwalPelajaranEntity } from \"./jadwal-pelajaran.entity\";\n\n// export type KategoriMapelType = typeof KATEGORI_MAPEL[number]; // Already defined\n\n@Entity({ name: \"mata_pelajaran\" })\nexport class MataPelajaranEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Index({ unique: true })\n  @Column({ type: \"varchar\", length: 50 })\n  kode!: string;\n\n  @Column({ type: \"varchar\", length: 255 })\n  nama!: string;\n\n  @Column({ type: \"text\", nullable: true })\n  deskripsi?: string | null;\n\n  @Column({\n    type: \"enum\",\n    enum: KATEGORI_MAPEL, \n  })\n  kategori!: KategoriMapelType;\n\n  @OneToMany(\"StrukturKurikulumEntity\", (ske: StrukturKurikulumEntity) => ske.mapel)\n  strukturKurikulumEntries?: StrukturKurikulumEntity[];\n\n  @OneToMany(\"SilabusEntity\", (silabus: SilabusEntity) => silabus.mapel)\n  silabusList?: SilabusEntity[];\n\n  @OneToMany(\"RppEntity\", (rpp: RppEntity) => rpp.mapel)\n  rppList?: RppEntity[];\n\n  @OneToMany(\"JadwalPelajaranEntity\", (jadwal) => jadwal.mapel)\n  jadwalPelajaranEntries?: JadwalPelajaranEntity[];\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;AACA;;;;;;;;AAUO,MAAM;IAEX,GAAY;IAIZ,KAAc;IAGd,KAAc;IAGd,UAA0B;IAM1B,SAA6B;IAG7B,yBAAqD;IAGrD,YAA8B;IAG9B,QAAsB;IAGtB,uBAAiD;IAGjD,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QAjCW,QAAQ;;;QACP,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;QAAQ,UAAU;;;;;;QAIhC,MAAM;QACN,MAAM,yHAAA,CAAA,iBAAc;;;;;sLAIiB,MAAiC,IAAI,KAAK;;;;4KAGpD,UAA2B,QAAQ,KAAK;;;;wKAG5C,MAAmB,IAAI,KAAK;;;;oLAGhB,SAAW,OAAO,KAAK;;;;;QAGxC,MAAM;;;;;;QAGN,MAAM;;;;;;QApClB,MAAM","debugId":null}},
    {"offset": {"line": 663, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/types/index.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { KATEGORI_SKL_CONST, FASE_CP_CONST, JENIS_MATERI_AJAR } from \"@/lib/constants\";\n// It's generally better to import the specific entity types if they are simple and don't cause circular dependencies\n// or if you need to strictly type the shape of related data.\n// However, for Pick utility, importing the full entity and picking fields is also common.\nimport type { SlotWaktuEntity } from \"@/entities/slot-waktu.entity\";\nimport type { MataPelajaranEntity } from \"@/entities/mata-pelajaran.entity\";\nimport type { UserEntity } from \"@/entities/user.entity\";\nimport type { RuanganEntity } from \"@/entities/ruangan.entity\";\nimport type { TestTipe as TestEntityType, TestStatus as TestStatusType } from \"@/entities/test.entity\";\n\n\nexport type Role = 'admin' | 'guru' | 'siswa' | 'pimpinan' | 'superadmin';\n\nexport interface User {\n  id: string; // This will be the Firebase UID\n  email: string;\n  name?: string | null; // Typically from Firebase displayName, can be fallback\n  role: Role; // From local DB\n  isVerified: boolean; // From Firebase emailVerified\n  avatarUrl?: string | null; // From Firebase photoURL or local DB\n\n  // Fields primarily from local DB, synced or managed separately\n  fullName?: string | null;\n  phone?: string | null;\n  address?: string | null;\n  birthDate?: string | null; // Stored as 'YYYY-MM-DD' string\n  bio?: string | null;\n  nis?: string | null;\n  nip?: string | null;\n  joinDate?: string | null; // Stored as 'YYYY-MM-DD' string\n  kelas?: string | null; \n  mataPelajaran?: string | null; // Can be a comma-separated string or array if multiple\n}\n\nexport interface NavItem {\n  href: string;\n  label: string;\n  icon: React.ElementType;\n  roles: Role[];\n  subItems?: NavItem[];\n}\n\nexport type KategoriSklType = typeof KATEGORI_SKL_CONST[number];\n\nexport interface SKL {\n  id: string;\n  kode: string;\n  deskripsi: string;\n  kategori: KategoriSklType;\n  createdAt?: Date | string;\n  updatedAt?: Date | string;\n}\n\nexport type FaseCpType = typeof FASE_CP_CONST[number];\n\nexport interface CapaianPembelajaran {\n  id: string;\n  kode: string;\n  deskripsi: string;\n  fase: FaseCpType;\n  elemen: string;\n  createdAt?: Date | string;\n  updatedAt?: Date | string;\n}\n\nexport interface Ruangan {\n  id: string;\n  nama: string;\n  kode: string;\n  kapasitas: number;\n  fasilitas?: string | null;\n  createdAt?: Date | string;\n  updatedAt?: Date | string;\n}\n\nexport interface SlotWaktu {\n  id: string;\n  namaSlot: string;\n  waktuMulai: string; // HH:MM\n  waktuSelesai: string; // HH:MM\n  urutan?: number | null;\n  createdAt?: Date | string;\n  updatedAt?: Date | string;\n}\n\nexport interface StrukturKurikulumItem {\n  id: string;\n  tingkat: string;\n  jurusan: string;\n  mapelId: string;\n  namaMapel: string;\n  alokasiJam: number;\n  guruPengampuId?: string | null;\n  guruPengampuNama?: string | null;\n  createdAt?: Date | string;\n  updatedAt?: Date | string;\n}\n\nexport interface Silabus {\n  id: string;\n  judul: string;\n  mapelId: string;\n  mapel?: Pick<MataPelajaranEntity, 'id' | 'nama' | 'kode'>;\n  kelas: string;\n  deskripsiSingkat?: string | null;\n  namaFileOriginal?: string | null;\n  fileUrl?: string | null;\n  uploaderId: string;\n  uploader?: Pick<UserEntity, 'id' | 'name' | 'fullName' | 'email'>;\n  createdAt?: Date | string;\n  updatedAt?: Date | string;\n}\n\nexport interface RPP {\n  id: string;\n  judul: string;\n  mapelId: string;\n  mapel?: Pick<MataPelajaranEntity, 'id' | 'nama' | 'kode'>;\n  kelas: string;\n  pertemuanKe: number;\n  materiPokok?: string | null;\n  kegiatanPembelajaran?: string | null;\n  penilaian?: string | null;\n  namaFileOriginal?: string | null;\n  fileUrl?: string | null;\n  uploaderId: string;\n  uploader?: Pick<UserEntity, 'id' | 'name' | 'fullName' | 'email'>;\n  createdAt?: Date | string;\n  updatedAt?: Date | string;\n}\n\nexport interface MateriKategori {\n  id: string;\n  nama: string;\n  createdAt?: Date | string;\n  updatedAt?: Date | string;\n}\n\nexport interface MataPelajaran {\n  id: string;\n  kode: string;\n  nama: string;\n  deskripsi?: string | null;\n  kategori: \"Wajib Umum\" | \"Wajib Peminatan IPA\" | \"Wajib Peminatan IPS\" | \"Pilihan Lintas Minat\" | \"Muatan Lokal\";\n  createdAt?: Date | string;\n  updatedAt?: Date | string;\n}\n\nexport type JenisMateriAjarType = typeof JENIS_MATERI_AJAR[number];\n\nexport interface MateriAjar {\n  id: string;\n  judul: string;\n  deskripsi?: string | null;\n  mapelNama: string;\n  jenisMateri: JenisMateriAjarType;\n  namaFileOriginal?: string | null;\n  fileUrl?: string | null;\n  tanggalUpload: string; // YYYY-MM-DD\n  uploaderId: string;\n  uploader?: Pick<UserEntity, 'id' | 'name' | 'fullName' | 'email'>;\n  createdAt?: Date | string;\n  updatedAt?: Date | string;\n}\n\nexport interface JadwalPelajaran {\n  id: string;\n  hari: string;\n  kelas: string; // Changed from kelasId to kelas for consistency\n  slotWaktuId: string;\n  slotWaktu?: Pick<SlotWaktuEntity, 'id' | 'namaSlot' | 'waktuMulai' | 'waktuSelesai'>;\n  mapelId: string;\n  mapel?: Pick<MataPelajaranEntity, 'id' | 'nama' | 'kode'>;\n  guruId: string;\n  guru?: Pick<UserEntity, 'id' | 'name' | 'fullName' | 'email'>; // Added email for display\n  ruanganId: string;\n  ruangan?: Pick<RuanganEntity, 'id' | 'nama' | 'kode'>;\n  catatan?: string | null;\n  createdAt?: Date | string;\n  updatedAt?: Date | string;\n}\n\nexport interface Tugas {\n  id: string;\n  judul: string;\n  deskripsi?: string | null;\n  mapel: string;\n  kelas: string;\n  tenggat: string; // ISO string from API (Date object in entity)\n  namaFileLampiran?: string | null;\n  fileUrlLampiran?: string | null; // Simulated path\n  uploaderId: string;\n  uploader?: Pick<UserEntity, 'id' | 'name' | 'fullName' | 'email'>;\n  createdAt?: string;\n  updatedAt?: string;\n  // For frontend display, might be mocked or derived\n  terkumpul?: number;\n  totalSiswa?: number;\n  status?: \"Aktif\" | \"Ditutup\" | \"Draf\";\n  nilai?: number; // Added for siswa tugas page\n}\n\n// Re-exporting TestTipe and TestStatus from entity types for use in frontend\nexport type TestTipe = TestEntityType;\nexport type TestStatus = TestStatusType;\n\nexport interface Test {\n  id: string;\n  judul: string;\n  mapel: string;\n  kelas: string;\n  tanggal: string; // ISO string from API (Date object in entity)\n  durasi: number; // dalam menit\n  tipe: TestTipe;\n  status: TestStatus;\n  deskripsi?: string | null;\n  jumlahSoal?: number | null;\n  uploaderId: string;\n  uploader?: Pick<UserEntity, 'id' | 'name' | 'fullName' | 'email'>;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\n\nexport {\n    KATEGORI_SKL_CONST as KATEGORI_SKL,\n    FASE_CP_CONST as FASE_CP,\n    JENIS_MATERI_AJAR // Now correctly re-exporting the imported constant\n};\n"],"names":[],"mappings":";AACA,+PAA2B,uCAAuC;AAClE","debugId":null}},
    {"offset": {"line": 695, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/skl.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, Index } from \"typeorm\";\nimport { KATEGORI_SKL, type KategoriSklType } from \"@/types\";\n\n@Entity({ name: \"standar_kompetensi_lulusan\" })\nexport class SklEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Index({ unique: true })\n  @Column({ type: \"varchar\", length: 50 })\n  kode!: string;\n\n  @Column({ type: \"text\" })\n  deskripsi!: string;\n\n  @Column({\n    type: \"enum\",\n    enum: KATEGORI_SKL,\n  })\n  kategori!: KategoriSklType;\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;AACA;AAAA;;;;;;;;AAGO,MAAM;IAEX,GAAY;IAIZ,KAAc;IAGd,UAAmB;IAMnB,SAA2B;IAG3B,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QAlBW,QAAQ;;;QACP,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;;;;;;QAId,MAAM;QACN,MAAM,+KAAA,CAAA,eAAY;;;;;;QAIA,MAAM;;;;;;QAGN,MAAM;;;;;;QArBlB,MAAM","debugId":null}},
    {"offset": {"line": 779, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/cp.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, Index } from \"typeorm\";\nimport { FASE_CP, type FaseCpType } from \"@/types\";\n\n@Entity({ name: \"capaian_pembelajaran\" })\nexport class CpEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Index({ unique: true })\n  @Column({ type: \"varchar\", length: 100 }) // Kode CP bisa panjang\n  kode!: string;\n\n  @Column({ type: \"text\" })\n  deskripsi!: string;\n\n  @Column({\n    type: \"enum\",\n    enum: FASE_CP,\n  })\n  fase!: FaseCpType;\n\n  @Column({ type: \"varchar\", length: 255 })\n  elemen!: string; // Misal: Bilangan, Membaca dan Memirsa, dll.\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;AACA;AAAA;;;;;;;;AAGO,MAAM;IAEX,GAAY;IAIZ,KAAc;IAGd,UAAmB;IAMnB,KAAkB;IAGlB,OAAgB;IAGhB,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QArBW,QAAQ;;;QACP,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;;;;;;QAId,MAAM;QACN,MAAM,qKAAA,CAAA,UAAO;;;;;;QAIL,MAAM;QAAW,QAAQ;;;;;;QAGf,MAAM;;;;;;QAGN,MAAM;;;;;;QAxBlB,MAAM","debugId":null}},
    {"offset": {"line": 861, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/materi-kategori.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, Index } from \"typeorm\";\n\n@Entity({ name: \"materi_kategori\" })\nexport class MateriKategoriEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Index({ unique: true })\n  @Column({ type: \"varchar\", length: 255 })\n  nama!: string;\n  \n  // Tambahkan deskripsi jika diperlukan\n  // @Column({ type: \"text\", nullable: true })\n  // deskripsi?: string | null;\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;;;;;;;AAGO,MAAM;IAEX,GAAY;IAIZ,KAAc;IAEd,sCAAsC;IACtC,4CAA4C;IAC5C,6BAA6B;IAG7B,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QAbW,QAAQ;;;QACP,MAAM;QAAW,QAAQ;;;;;;QAOf,MAAM;;;;;;QAGN,MAAM;;;;;;QAhBlB,MAAM","debugId":null}},
    {"offset": {"line": 920, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/materi-ajar.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, ManyToOne, JoinColumn } from \"typeorm\";\nimport { JENIS_MATERI_AJAR, type JenisMateriAjarType } from \"@/types\";\nimport type { UserEntity } from \"./user.entity\"; // Menggunakan import type\n\n@Entity({ name: \"materi_ajar\" })\nexport class MateriAjarEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Column({ type: \"varchar\", length: 255 })\n  judul!: string;\n\n  @Column({ type: \"text\", nullable: true })\n  deskripsi?: string | null;\n\n  @Column({ type: \"varchar\", length: 255 }) // Menyimpan nama mata pelajaran\n  mapelNama!: string;\n\n  @Column({\n    type: \"enum\",\n    enum: JENIS_MATERI_AJAR,\n  })\n  jenisMateri!: JenisMateriAjarType;\n\n  @Column({ type: \"varchar\", length: 255, nullable: true })\n  namaFileOriginal?: string | null; // Nama file asli saat diunggah\n\n  @Column({ type: \"varchar\", length: 500, nullable: true }) // Bisa URL atau path internal (simulasi)\n  fileUrl?: string | null;\n\n  @Column({ type: \"date\" }) // Hanya tanggal, tanpa waktu\n  tanggalUpload!: string;\n\n  @Column({ type: \"uuid\" })\n  uploaderId!: string;\n\n  @ManyToOne(\"UserEntity\", { onDelete: \"SET NULL\", nullable: true }) // Jika uploader dihapus, set uploaderId jadi NULL\n  @JoinColumn({ name: \"uploaderId\" })\n  uploader?: UserEntity;\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;AACA;AAAA;;;;;;;;AAIO,MAAM;IAEX,GAAY;IAGZ,MAAe;IAGf,UAA0B;IAG1B,UAAmB;IAMnB,YAAkC;IAGlC,iBAAiC;IAGjC,QAAwB;IAGxB,cAAuB;IAGvB,WAAoB;IAIpB,SAAsB;IAGtB,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QApCY,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;QAAQ,UAAU;;;;;;QAGxB,MAAM;QAAW,QAAQ;;;;;;QAIjC,MAAM;QACN,MAAM,yHAAA,CAAA,oBAAiB;;;;;;QAIf,MAAM;QAAW,QAAQ;QAAK,UAAU;;;;;;QAGxC,MAAM;QAAW,QAAQ;QAAK,UAAU;;;;;;QAGxC,MAAM;;;;;;QAGN,MAAM;;;;;;QAGW,UAAU;QAAY,UAAU;;;QAC7C,MAAM;;;;;;QAGA,MAAM;;;;;;QAGN,MAAM;;;;;;QAvClB,MAAM","debugId":null}},
    {"offset": {"line": 1043, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/struktur-kurikulum.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, ManyToOne, JoinColumn, Index } from \"typeorm\";\nimport type { MataPelajaranEntity } from \"./mata-pelajaran.entity\";\nimport type { UserEntity } from \"./user.entity\";\n\n@Entity({ name: \"struktur_kurikulum\" })\n@Index([\"tingkat\", \"jurusan\", \"mapel\"], { unique: true }) // Mencegah duplikasi mapel yang sama dalam tingkat & jurusan yang sama\nexport class StrukturKurikulumEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Column({ type: \"varchar\", length: 10 }) // Misal: X, XI, XII\n  tingkat!: string;\n\n  @Column({ type: \"varchar\", length: 50 }) // Misal: IPA, IPS, Umum\n  jurusan!: string;\n\n  @Column({ type: \"uuid\" })\n  mapelId!: string;\n\n  @ManyToOne(\"MataPelajaranEntity\", (mapel) => mapel.strukturKurikulumEntries, { onDelete: \"CASCADE\" })\n  @JoinColumn({ name: \"mapelId\" })\n  mapel!: MataPelajaranEntity;\n\n  @Column({ type: \"int\" })\n  alokasiJam!: number; // Alokasi jam per minggu\n\n  @Column({ type: \"uuid\", nullable: true })\n  guruPengampuId?: string | null;\n\n  // Relasi ke UserEntity (Guru) - opsional\n  @ManyToOne(\"UserEntity\", (user) => user.strukturKurikulumDiajar, { onDelete: \"SET NULL\", nullable: true })\n  @JoinColumn({ name: \"guruPengampuId\" })\n  guruPengampu?: UserEntity | null;\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;;;;;;;AAMO,MAAM;IAEX,GAAY;IAGZ,QAAiB;IAGjB,QAAiB;IAGjB,QAAiB;IAIjB,MAA4B;IAG5B,WAAoB;IAGpB,eAA+B;IAE/B,yCAAyC;IAGzC,aAAiC;IAGjC,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QA7BY,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;;;;;kLAGmB,QAAU,MAAM,wBAAwB;QAAI,UAAU;;;QAC3E,MAAM;;;;;;QAGV,MAAM;;;;;;QAGN,MAAM;QAAQ,UAAU;;;;;yKAIR,OAAS,KAAK,uBAAuB;QAAI,UAAU;QAAY,UAAU;;;QACrF,MAAM;;;;;;QAGA,MAAM;;;;;;QAGN,MAAM;;;;;;QAjClB,MAAM;;;QACR;QAAW;QAAW;;QAAY,QAAQ","debugId":null}},
    {"offset": {"line": 1155, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/silabus.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, ManyToOne, JoinColumn } from \"typeorm\";\nimport type { MataPelajaranEntity } from \"./mata-pelajaran.entity\";\nimport type { UserEntity } from \"./user.entity\";\n\n@Entity({ name: \"silabus\" })\nexport class SilabusEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Column({ type: \"varchar\", length: 255 })\n  judul!: string;\n\n  @Column({ type: \"uuid\" })\n  mapelId!: string;\n\n  @ManyToOne(\"MataPelajaranEntity\", (mapel) => mapel.silabusList, { onDelete: \"CASCADE\" })\n  @JoinColumn({ name: \"mapelId\" })\n  mapel!: MataPelajaranEntity;\n\n  @Column({ type: \"varchar\", length: 100 }) // e.g., \"X IPA 1\", \"Semua Kelas XI\"\n  kelas!: string;\n\n  @Column({ type: \"text\", nullable: true })\n  deskripsiSingkat?: string | null;\n\n  @Column({ type: \"varchar\", length: 255, nullable: true })\n  namaFileOriginal?: string | null;\n\n  @Column({ type: \"varchar\", length: 500, nullable: true }) // Path simulasi ke file\n  fileUrl?: string | null;\n\n  @Column({ type: \"uuid\" })\n  uploaderId!: string;\n\n  @ManyToOne(\"UserEntity\", (user) => user.silabusUploaded, { onDelete: \"SET NULL\", nullable: true })\n  @JoinColumn({ name: \"uploaderId\" })\n  uploader?: UserEntity | null;\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;;;;;;;AAKO,MAAM;IAEX,GAAY;IAGZ,MAAe;IAGf,QAAiB;IAIjB,MAA4B;IAG5B,MAAe;IAGf,iBAAiC;IAGjC,iBAAiC;IAGjC,QAAwB;IAGxB,WAAoB;IAIpB,SAA6B;IAG7B,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QAlCY,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;;;;;kLAGmB,QAAU,MAAM,WAAW;QAAI,UAAU;;;QAC9D,MAAM;;;;;;QAGV,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;QAAQ,UAAU;;;;;;QAGxB,MAAM;QAAW,QAAQ;QAAK,UAAU;;;;;;QAGxC,MAAM;QAAW,QAAQ;QAAK,UAAU;;;;;;QAGxC,MAAM;;;;;yKAGU,OAAS,KAAK,eAAe;QAAI,UAAU;QAAY,UAAU;;;QAC7E,MAAM;;;;;;QAGA,MAAM;;;;;;QAGN,MAAM;;;;;;QArClB,MAAM","debugId":null}},
    {"offset": {"line": 1277, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/rpp.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, ManyToOne, JoinColumn } from \"typeorm\";\nimport type { MataPelajaranEntity } from \"./mata-pelajaran.entity\";\nimport type { UserEntity } from \"./user.entity\";\n\n@Entity({ name: \"rpp\" }) // Rencana Pelaksanaan Pembelajaran\nexport class RppEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Column({ type: \"varchar\", length: 255 })\n  judul!: string;\n\n  @Column({ type: \"uuid\" })\n  mapelId!: string;\n\n  @ManyToOne(\"MataPelajaranEntity\", (mapel) => mapel.rppList, { onDelete: \"CASCADE\" })\n  @JoinColumn({ name: \"mapelId\" })\n  mapel!: MataPelajaranEntity;\n\n  @Column({ type: \"varchar\", length: 100 })\n  kelas!: string;\n\n  @Column({ type: \"int\" })\n  pertemuanKe!: number;\n\n  @Column({ type: \"text\", nullable: true })\n  materiPokok?: string | null;\n\n  @Column({ type: \"text\", nullable: true })\n  kegiatanPembelajaran?: string | null;\n\n  @Column({ type: \"text\", nullable: true })\n  penilaian?: string | null;\n\n  @Column({ type: \"varchar\", length: 255, nullable: true })\n  namaFileOriginal?: string | null;\n\n  @Column({ type: \"varchar\", length: 500, nullable: true }) // Path simulasi ke file\n  fileUrl?: string | null;\n\n  @Column({ type: \"uuid\" })\n  uploaderId!: string;\n\n  @ManyToOne(\"UserEntity\", (user) => user.rppUploaded, { onDelete: \"SET NULL\", nullable: true })\n  @JoinColumn({ name: \"uploaderId\" })\n  uploader?: UserEntity | null;\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;;;;;;;AAKO,MAAM;IAEX,GAAY;IAGZ,MAAe;IAGf,QAAiB;IAIjB,MAA4B;IAG5B,MAAe;IAGf,YAAqB;IAGrB,YAA4B;IAG5B,qBAAqC;IAGrC,UAA0B;IAG1B,iBAAiC;IAGjC,QAAwB;IAGxB,WAAoB;IAIpB,SAA6B;IAG7B,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QA3CY,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;;;;;kLAGmB,QAAU,MAAM,OAAO;QAAI,UAAU;;;QAC1D,MAAM;;;;;;QAGV,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;;;;;;QAGN,MAAM;QAAQ,UAAU;;;;;;QAGxB,MAAM;QAAQ,UAAU;;;;;;QAGxB,MAAM;QAAQ,UAAU;;;;;;QAGxB,MAAM;QAAW,QAAQ;QAAK,UAAU;;;;;;QAGxC,MAAM;QAAW,QAAQ;QAAK,UAAU;;;;;;QAGxC,MAAM;;;;;yKAGU,OAAS,KAAK,WAAW;QAAI,UAAU;QAAY,UAAU;;;QACzE,MAAM;;;;;;QAGA,MAAM;;;;;;QAGN,MAAM;;;;;;QA9ClB,MAAM","debugId":null}},
    {"offset": {"line": 1422, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/ruangan.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, Index, OneToMany } from \"typeorm\";\nimport type { JadwalPelajaranEntity } from \"./jadwal-pelajaran.entity\";\n\n@Entity({ name: \"ruangan\" })\nexport class RuanganEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Column({ type: \"varchar\", length: 255 })\n  nama!: string;\n\n  @Index({ unique: true })\n  @Column({ type: \"varchar\", length: 50 })\n  kode!: string;\n\n  @Column({ type: \"int\" })\n  kapasitas!: number;\n\n  @Column({ type: \"text\", nullable: true })\n  fasilitas?: string | null;\n\n  @OneToMany(\"JadwalPelajaranEntity\", (jadwal) => jadwal.ruangan)\n  jadwalPelajaranEntries?: JadwalPelajaranEntity[];\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;;;;;;;AAIO,MAAM;IAEX,GAAY;IAGZ,KAAc;IAId,KAAc;IAGd,UAAmB;IAGnB,UAA0B;IAG1B,uBAAiD;IAGjD,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QArBY,MAAM;QAAW,QAAQ;;;;;;QAG1B,QAAQ;;;QACP,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;;;;;;QAGN,MAAM;QAAQ,UAAU;;;;;oLAGG,SAAW,OAAO,OAAO;;;;;QAG1C,MAAM;;;;;;QAGN,MAAM;;;;;;QAxBlB,MAAM","debugId":null}},
    {"offset": {"line": 1506, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/slot-waktu.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, Index, OneToMany } from \"typeorm\";\nimport type { JadwalPelajaranEntity } from \"./jadwal-pelajaran.entity\";\n\n@Entity({ name: \"slot_waktu\" })\nexport class SlotWaktuEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Index({ unique: true }) // Nama slot sebaiknya unik untuk kemudahan referensi\n  @Column({ type: \"varchar\", length: 100 })\n  namaSlot!: string;\n\n  @Column({ type: \"time\" }) // Format \"HH:MM:SS\" atau \"HH:MM\"\n  waktuMulai!: string;\n\n  @Column({ type: \"time\" })\n  waktuSelesai!: string;\n\n  @Column({ type: \"int\", nullable: true }) // Untuk pengurutan custom jika diperlukan\n  urutan?: number | null;\n\n  @OneToMany(\"JadwalPelajaranEntity\", (jadwal) => jadwal.slotWaktu)\n  jadwalPelajaranEntries?: JadwalPelajaranEntity[];\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;;;;;;;AAIO,MAAM;IAEX,GAAY;IAIZ,SAAkB;IAGlB,WAAoB;IAGpB,aAAsB;IAGtB,OAAuB;IAGvB,uBAAiD;IAGjD,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QArBW,QAAQ;;;QACP,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;;;;;;QAGN,MAAM;;;;;;QAGN,MAAM;QAAO,UAAU;;;;;oLAGI,SAAW,OAAO,SAAS;;;;;QAG5C,MAAM;;;;;;QAGN,MAAM;;;;;;QAxBlB,MAAM","debugId":null}},
    {"offset": {"line": 1589, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/jadwal-pelajaran.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, ManyToOne, JoinColumn, Index } from \"typeorm\";\nimport type { SlotWaktuEntity } from \"./slot-waktu.entity\";\nimport type { MataPelajaranEntity } from \"./mata-pelajaran.entity\";\nimport type { UserEntity } from \"./user.entity\";\nimport type { RuanganEntity } from \"./ruangan.entity\";\n\n@Entity({ name: \"jadwal_pelajaran\" })\n// Mencegah kelas yang sama memiliki dua jadwal berbeda pada slot waktu yang sama di hari yang sama\n@Index([\"hari\", \"kelas\", \"slotWaktuId\"], { unique: true })\n// Indeks untuk membantu query cepat dan deteksi konflik guru\n@Index([\"hari\", \"guruId\", \"slotWaktuId\"])\n// Indeks untuk membantu query cepat dan deteksi konflik ruangan\n@Index([\"hari\", \"ruanganId\", \"slotWaktuId\"])\nexport class JadwalPelajaranEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Column({ type: \"varchar\", length: 20 }) // Senin, Selasa, dll.\n  hari!: string;\n\n  @Column({ type: \"varchar\", length: 100 }) // Misal: \"X IPA 1\", \"XI IPS Semua\"\n  kelas!: string;\n\n  @Column({ type: \"uuid\" })\n  slotWaktuId!: string;\n\n  @ManyToOne(\"SlotWaktuEntity\", (slot) => slot.jadwalPelajaranEntries, { onDelete: \"CASCADE\", eager: true }) // eager load slot detail\n  @JoinColumn({ name: \"slotWaktuId\" })\n  slotWaktu!: SlotWaktuEntity;\n\n  @Column({ type: \"uuid\" })\n  mapelId!: string;\n\n  @ManyToOne(\"MataPelajaranEntity\", (mapel) => mapel.jadwalPelajaranEntries, { onDelete: \"CASCADE\", eager: true }) // eager load mapel detail\n  @JoinColumn({ name: \"mapelId\" })\n  mapel!: MataPelajaranEntity;\n\n  @Column({ type: \"uuid\" })\n  guruId!: string;\n\n  @ManyToOne(\"UserEntity\", (user) => user.jadwalMengajar, { onDelete: \"CASCADE\", eager: true }) // eager load guru detail\n  @JoinColumn({ name: \"guruId\" })\n  guru!: UserEntity;\n\n  @Column({ type: \"uuid\" })\n  ruanganId!: string;\n\n  @ManyToOne(\"RuanganEntity\", (ruangan) => ruangan.jadwalPelajaranEntries, { onDelete: \"CASCADE\", eager: true }) // eager load ruangan detail\n  @JoinColumn({ name: \"ruanganId\" })\n  ruangan!: RuanganEntity;\n  \n  @Column({ type: \"text\", nullable: true })\n  catatan?: string | null;\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;;;;;;;AAaO,MAAM;IAEX,GAAY;IAGZ,KAAc;IAGd,MAAe;IAGf,YAAqB;IAIrB,UAA4B;IAG5B,QAAiB;IAIjB,MAA4B;IAG5B,OAAgB;IAIhB,KAAkB;IAGlB,UAAmB;IAInB,QAAwB;IAGxB,QAAwB;IAGxB,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QA1CY,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;;;;;8KAGe,OAAS,KAAK,sBAAsB;QAAI,UAAU;QAAW,OAAO;;;QACrF,MAAM;;;;;;QAGV,MAAM;;;;;kLAGmB,QAAU,MAAM,sBAAsB;QAAI,UAAU;QAAW,OAAO;;;QAC3F,MAAM;;;;;;QAGV,MAAM;;;;;yKAGU,OAAS,KAAK,cAAc;QAAI,UAAU;QAAW,OAAO;;;QACxE,MAAM;;;;;;QAGV,MAAM;;;;;4KAGa,UAAY,QAAQ,sBAAsB;QAAI,UAAU;QAAW,OAAO;;;QACzF,MAAM;;;;;;QAGV,MAAM;QAAQ,UAAU;;;;;;QAGd,MAAM;;;;;;QAGN,MAAM;;;;;;QAnDlB,MAAM;;;QAER;QAAQ;QAAS;;QAAkB,QAAQ;;;QAE3C;QAAQ;QAAU;;;QAElB;QAAQ;QAAa","debugId":null}},
    {"offset": {"line": 1747, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/tugas.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, ManyToOne, JoinColumn } from \"typeorm\";\nimport type { UserEntity } from \"./user.entity\";\n\n@Entity({ name: \"tugas\" })\nexport class TugasEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Column({ type: \"varchar\", length: 255 })\n  judul!: string;\n\n  @Column({ type: \"text\", nullable: true })\n  deskripsi?: string | null;\n\n  @Column({ type: \"varchar\", length: 255 }) // Menyimpan nama mata pelajaran\n  mapel!: string;\n\n  @Column({ type: \"varchar\", length: 255 }) // Menyimpan nama kelas atau daftar kelas\n  kelas!: string;\n\n  @Column({ type: \"timestamp with time zone\" })\n  tenggat!: Date;\n\n  @Column({ type: \"varchar\", length: 255, nullable: true })\n  namaFileLampiran?: string | null;\n\n  @Column({ type: \"varchar\", length: 500, nullable: true }) // Path simulasi ke file\n  fileUrlLampiran?: string | null;\n\n  @Column({ type: \"uuid\" })\n  uploaderId!: string;\n\n  @ManyToOne(\"UserEntity\", { onDelete: \"CASCADE\", nullable: false }) // Jika uploader dihapus, tugas juga terhapus\n  @JoinColumn({ name: \"uploaderId\" })\n  uploader!: UserEntity; // Relasi ke UserEntity\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;;;;;;;AAIO,MAAM;IAEX,GAAY;IAGZ,MAAe;IAGf,UAA0B;IAG1B,MAAe;IAGf,MAAe;IAGf,QAAe;IAGf,iBAAiC;IAGjC,gBAAgC;IAGhC,WAAoB;IAIpB,SAAsB;IAGtB,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QAjCY,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;QAAQ,UAAU;;;;;;QAGxB,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;;;;;;QAGN,MAAM;QAAW,QAAQ;QAAK,UAAU;;;;;;QAGxC,MAAM;QAAW,QAAQ;QAAK,UAAU;;;;;;QAGxC,MAAM;;;;;;QAGW,UAAU;QAAW,UAAU;;;QAC5C,MAAM;;;;;;QAGA,MAAM;;;;;;QAGN,MAAM;;;;;;QApClB,MAAM","debugId":null}},
    {"offset": {"line": 1867, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/test.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, ManyToOne, JoinColumn } from \"typeorm\";\nimport type { UserEntity } from \"./user.entity\"; // Menggunakan import type\n\nexport type TestTipe = \"Kuis\" | \"Ulangan Harian\" | \"UTS\" | \"UAS\" | \"Lainnya\";\nexport type TestStatus = \"Draf\" | \"Terjadwal\" | \"Berlangsung\" | \"Selesai\" | \"Dinilai\"; // Ditambah \"Menunggu Hasil\" jika perlu\n\n@Entity({ name: \"tests\" })\nexport class TestEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Column({ type: \"varchar\", length: 255 })\n  judul!: string;\n\n  @Column({ type: \"varchar\", length: 255 }) // Nama mata pelajaran\n  mapel!: string;\n\n  @Column({ type: \"varchar\", length: 255 }) // Bisa \"Semua Kelas X\", \"X IPA 1, X IPA 2\"\n  kelas!: string;\n\n  @Column({ type: \"timestamp with time zone\" })\n  tanggal!: Date; // Tanggal dan waktu pelaksanaan\n\n  @Column({ type: \"int\" }) // Durasi dalam menit\n  durasi!: number;\n\n  @Column({\n    type: \"enum\",\n    enum: [\"Kuis\", \"Ulangan Harian\", \"UTS\", \"UAS\", \"Lainnya\"],\n  })\n  tipe!: TestTipe;\n\n  @Column({\n    type: \"enum\",\n    enum: [\"Draf\", \"Terjadwal\", \"Berlangsung\", \"Selesai\", \"Dinilai\"], // \"Menunggu Hasil\" bisa jadi alias \"Selesai\"\n    default: \"Draf\",\n  })\n  status!: TestStatus;\n\n  @Column({ type: \"text\", nullable: true })\n  deskripsi?: string | null;\n\n  @Column({ type: \"int\", nullable: true })\n  jumlahSoal?: number | null;\n\n  @Column({ type: \"uuid\" })\n  uploaderId!: string;\n\n  @ManyToOne(\"UserEntity\", (user) => user.testUploaded, { onDelete: \"CASCADE\", nullable: false })\n  @JoinColumn({ name: \"uploaderId\" })\n  uploader!: UserEntity;\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;;;;;;;AAOO,MAAM;IAEX,GAAY;IAGZ,MAAe;IAGf,MAAe;IAGf,MAAe;IAGf,QAAe;IAGf,OAAgB;IAMhB,KAAgB;IAOhB,OAAoB;IAGpB,UAA0B;IAG1B,WAA2B;IAG3B,WAAoB;IAIpB,SAAsB;IAGtB,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QA9CY,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;;;;;;QAGN,MAAM;;;;;;QAId,MAAM;QACN,MAAM;YAAC;YAAQ;YAAkB;YAAO;YAAO;SAAU;;;;;;QAKzD,MAAM;QACN,MAAM;YAAC;YAAQ;YAAa;YAAe;YAAW;SAAU;QAChE,SAAS;;;;;;QAID,MAAM;QAAQ,UAAU;;;;;;QAGxB,MAAM;QAAO,UAAU;;;;;;QAGvB,MAAM;;;;;yKAGU,OAAS,KAAK,YAAY;QAAI,UAAU;QAAW,UAAU;;;QACzE,MAAM;;;;;;QAGA,MAAM;;;;;;QAGN,MAAM;;;;;;QAjDlB,MAAM","debugId":null}},
    {"offset": {"line": 2013, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data-source.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { DataSource, type DataSourceOptions } from \"typeorm\";\nimport { UserEntity } from \"@/entities/user.entity\";\n// AccountEntity, SessionEntity, VerificationTokenEntity are removed as they are NextAuth specific\nimport { MataPelajaranEntity } from \"@/entities/mata-pelajaran.entity\";\nimport { SklEntity } from \"@/entities/skl.entity\";\nimport { CpEntity } from \"@/entities/cp.entity\";\nimport { MateriKategoriEntity } from \"@/entities/materi-kategori.entity\";\nimport { MateriAjarEntity } from \"@/entities/materi-ajar.entity\";\nimport { StrukturKurikulumEntity } from \"@/entities/struktur-kurikulum.entity\";\nimport { SilabusEntity } from \"@/entities/silabus.entity\";\nimport { RppEntity } from \"@/entities/rpp.entity\";\nimport { RuanganEntity } from \"@/entities/ruangan.entity\";\nimport { SlotWaktuEntity } from \"@/entities/slot-waktu.entity\";\nimport { JadwalPelajaranEntity } from \"@/entities/jadwal-pelajaran.entity\";\nimport { TugasEntity } from \"@/entities/tugas.entity\";\nimport { TestEntity } from \"@/entities/test.entity\";\n\nexport const dataSourceOptions: DataSourceOptions = {\n  type: \"postgres\",\n  host: process.env.POSTGRES_HOST || \"localhost\",\n  port: Number(process.env.POSTGRES_PORT) || 5432,\n  username: process.env.POSTGRES_USER || \"postgres\",\n  password: process.env.POSTGRES_PASSWORD || \"password\",\n  database: process.env.POSTGRES_DB || \"educentral\",\n  synchronize: process.env.NODE_ENV === \"development\", \n  logging: process.env.NODE_ENV === \"development\" ? [\"query\", \"error\"] : [\"error\"],\n  entities: [\n    UserEntity,\n    // AccountEntity, // Removed\n    // SessionEntity, // Removed\n    // VerificationTokenEntity, // Removed\n    MataPelajaranEntity,\n    SklEntity,\n    CpEntity,\n    MateriKategoriEntity,\n    MateriAjarEntity,\n    StrukturKurikulumEntity,\n    SilabusEntity,\n    RppEntity,\n    RuanganEntity,\n    SlotWaktuEntity,\n    JadwalPelajaranEntity,\n    TugasEntity,\n    TestEntity,\n  ],\n  migrations: [], \n  subscribers: [],\n};\n\nlet AppDataSource: DataSource | undefined = undefined;\n\nexport async function getInitializedDataSource(): Promise<DataSource> {\n  if (AppDataSource) {\n    if (!AppDataSource.isInitialized) {\n      try {\n        console.log(\"DataSource found but not initialized. Re-initializing...\");\n        await AppDataSource.initialize();\n        console.log(\"DataSource re-initialized successfully.\");\n      } catch (err) {\n        console.error(\"Error during DataSource re-initialization:\", err);\n        AppDataSource = undefined; // Reset on failure to allow fresh attempt\n        throw err;\n      }\n    }\n    return AppDataSource;\n  }\n\n  console.log(\"No existing DataSource found. Creating and initializing new DataSource...\");\n  const newDataSource = new DataSource(dataSourceOptions);\n  try {\n    await newDataSource.initialize();\n    AppDataSource = newDataSource;\n    console.log(\"New DataSource has been initialized successfully.\");\n    return AppDataSource;\n  } catch (err) {\n    console.error(\"Error during new DataSource initialization:\", err);\n    AppDataSource = undefined; // Ensure it's reset so next call tries fresh\n    throw err; \n  }\n}\n"],"names":[],"mappings":";;;;AACA,+PAA2B,uCAAuC;AAClE;AACA;AACA,kGAAkG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAEO,MAAM,oBAAuC;IAClD,MAAM;IACN,MAAM,QAAQ,GAAG,CAAC,aAAa,IAAI;IACnC,MAAM,OAAO,QAAQ,GAAG,CAAC,aAAa,KAAK;IAC3C,UAAU,QAAQ,GAAG,CAAC,aAAa,IAAI;IACvC,UAAU,QAAQ,GAAG,CAAC,iBAAiB,IAAI;IAC3C,UAAU,QAAQ,GAAG,CAAC,WAAW,IAAI;IACrC,aAAa,oDAAyB;IACtC,SAAS,uCAAyC;QAAC;QAAS;KAAQ;IACpE,UAAU;QACR,mIAAA,CAAA,aAAU;QACV,4BAA4B;QAC5B,4BAA4B;QAC5B,sCAAsC;QACtC,gJAAA,CAAA,sBAAmB;QACnB,kIAAA,CAAA,YAAS;QACT,iIAAA,CAAA,WAAQ;QACR,iJAAA,CAAA,uBAAoB;QACpB,6IAAA,CAAA,mBAAgB;QAChB,oJAAA,CAAA,0BAAuB;QACvB,sIAAA,CAAA,gBAAa;QACb,kIAAA,CAAA,YAAS;QACT,sIAAA,CAAA,gBAAa;QACb,4IAAA,CAAA,kBAAe;QACf,kJAAA,CAAA,wBAAqB;QACrB,oIAAA,CAAA,cAAW;QACX,mIAAA,CAAA,aAAU;KACX;IACD,YAAY,EAAE;IACd,aAAa,EAAE;AACjB;AAEA,IAAI,gBAAwC;AAErC,eAAe;IACpB,IAAI,eAAe;QACjB,IAAI,CAAC,cAAc,aAAa,EAAE;YAChC,IAAI;gBACF,QAAQ,GAAG,CAAC;gBACZ,MAAM,cAAc,UAAU;gBAC9B,QAAQ,GAAG,CAAC;YACd,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,8CAA8C;gBAC5D,gBAAgB,WAAW,0CAA0C;gBACrE,MAAM;YACR;QACF;QACA,OAAO;IACT;IAEA,QAAQ,GAAG,CAAC;IACZ,MAAM,gBAAgB,IAAI,mIAAA,CAAA,aAAU,CAAC;IACrC,IAAI;QACF,MAAM,cAAc,UAAU;QAC9B,gBAAgB;QAChB,QAAQ,GAAG,CAAC;QACZ,OAAO;IACT,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,+CAA+C;QAC7D,gBAAgB,WAAW,6CAA6C;QACxE,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 2119, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/users/me/profile/route.ts"],"sourcesContent":["\nimport \"reflect-metadata\";\nimport { NextRequest, NextResponse } from \"next/server\";\n// getServerSession and authOptions are removed as we'll rely on client sending Firebase ID token for auth\nimport { getInitializedDataSource } from \"@/lib/data-source\";\nimport { UserEntity } from \"@/entities/user.entity\";\nimport * as z from \"zod\";\n// Import Firebase Admin SDK if you want to verify ID token server-side\n// import { auth as adminAuth } from 'firebase-admin'; // Assuming firebase-admin is initialized elsewhere\n\nconst profileUpdateSchema = z.object({\n  fullName: z.string().min(2, { message: \"Nama lengkap minimal 2 karakter.\"}).optional(),\n  phone: z.string().max(20, { message: \"Nomor telepon maksimal 20 karakter.\"}).optional().nullable(),\n  address: z.string().max(500, { message: \"Alamat maksimal 500 karakter.\"}).optional().nullable(),\n  birthDate: z.string().regex(/^\\d{4}-\\d{2}-\\d{2}$/, { message: \"Format tanggal lahir YYYY-MM-DD\" }).optional().nullable(),\n  bio: z.string().max(300, { message: \"Bio maksimal 300 karakter.\" }).optional().nullable(),\n  avatarUrl: z.string().url({ message: \"URL Avatar tidak valid.\" }).optional().nullable().or(z.literal('')),\n  name: z.string().min(2, { message: \"Nama panggilan minimal 2 karakter.\"}).optional().nullable(),\n  // Role-specific fields that the user might update for their own profile\n  nis: z.string().optional().nullable(),\n  nip: z.string().optional().nullable(),\n  kelas: z.string().optional().nullable(),\n  mataPelajaran: z.string().optional().nullable(),\n  firebaseUid: z.string().min(1, \"Firebase UID diperlukan\").optional(), // Added for identifying user without Admin SDK\n});\n\nexport async function PUT(request: NextRequest) {\n  // TODO: SECURE THIS ENDPOINT!\n  // This endpoint currently relies on the client sending `firebaseUid` in the body.\n  // For a true \"/me/profile\" endpoint, the server MUST verify the Firebase ID token\n  // from the Authorization header to securely identify the user.\n  // Example (requires Firebase Admin SDK initialized):\n  /*\n  const authorization = request.headers.get(\"Authorization\");\n  if (!authorization?.startsWith(\"Bearer \")) {\n    return NextResponse.json({ message: \"Unauthorized: Missing token\" }, { status: 401 });\n  }\n  const idToken = authorization.split(\"Bearer \")[1];\n  let firebaseUidFromToken;\n  try {\n    // const decodedToken = await adminAuth().verifyIdToken(idToken); // PSEUDOCODE\n    // firebaseUidFromToken = decodedToken.uid;\n    // For now, we'll simulate this or it will fail if Admin SDK isn't set up\n    // return NextResponse.json({ message: \"Server-side Firebase ID token verification not implemented.\" }, { status: 501 });\n    // For testing without admin SDK, we will proceed but this is not secure\n  } catch (error) {\n    console.error(\"Token verification error:\", error);\n    return NextResponse.json({ message: \"Unauthorized: Invalid token\" }, { status: 401 });\n  }\n  */\n\n  try {\n    const body = await request.json();\n    \n    // Temporary: Rely on firebaseUid from body until Admin SDK is used for proper /me.\n    const { firebaseUid, ...updatePayload } = body; \n    if (!firebaseUid) {\n        return NextResponse.json({ message: \"Firebase UID diperlukan dalam body request.\" }, { status: 400 });\n    }\n    // If firebaseUidFromToken was available from verified token, use that instead of body.firebaseUid for security.\n    // const targetFirebaseUid = firebaseUidFromToken || firebaseUid;\n\n\n    const validation = profileUpdateSchema.omit({ firebaseUid: true }).safeParse(updatePayload);\n\n    if (!validation.success) {\n      return NextResponse.json({ message: \"Input tidak valid.\", errors: validation.error.flatten().fieldErrors }, { status: 400 });\n    }\n\n    const updateData: Partial<UserEntity> = {};\n    const validatedData = validation.data;\n\n    if (validatedData.fullName !== undefined) updateData.fullName = validatedData.fullName;\n    if (validatedData.name !== undefined) updateData.name = validatedData.name;\n    if (validatedData.phone !== undefined) updateData.phone = validatedData.phone;\n    if (validatedData.address !== undefined) updateData.address = validatedData.address;\n    if (validatedData.birthDate !== undefined) updateData.birthDate = validatedData.birthDate; \n    if (validatedData.bio !== undefined) updateData.bio = validatedData.bio;\n    if (validatedData.avatarUrl !== undefined) updateData.image = validatedData.avatarUrl;\n    if (validatedData.nis !== undefined) updateData.nis = validatedData.nis;\n    if (validatedData.nip !== undefined) updateData.nip = validatedData.nip;\n    if (validatedData.kelas !== undefined) updateData.kelas = validatedData.kelas;\n    if (validatedData.mataPelajaran !== undefined) updateData.mataPelajaran = validatedData.mataPelajaran;\n\n\n    if (Object.keys(updateData).length === 0) {\n      return NextResponse.json({ message: \"Tidak ada data untuk diperbarui.\" }, { status: 400 });\n    }\n\n    const dataSource = await getInitializedDataSource();\n    const userRepo = dataSource.getRepository(UserEntity);\n\n    // Find user by firebaseUid to update their local profile\n    const userToUpdate = await userRepo.findOneBy({ firebaseUid: firebaseUid }); // Use targetFirebaseUid in secure impl\n    if (!userToUpdate) {\n      return NextResponse.json({ message: \"Profil pengguna lokal tidak ditemukan untuk Firebase UID tersebut.\" }, { status: 404 });\n    }\n\n    const updateResult = await userRepo.update(userToUpdate.id, updateData); // Use local DB UUID id for update\n\n    if (updateResult.affected === 0) {\n      return NextResponse.json({ message: \"Gagal memperbarui profil pengguna lokal.\" }, { status: 500 });\n    }\n\n    const updatedUser = await userRepo.findOne({\n        where: { id: userToUpdate.id }, // Query by local DB ID\n        select: [\n            \"id\", \"firebaseUid\", \"name\", \"email\", \"emailVerified\", \"image\", \"role\", \"isVerified\", \n            \"fullName\", \"phone\", \"address\", \"birthDate\", \"bio\", \"nis\", \"nip\", \n            \"joinDate\", \"kelas\", \"mataPelajaran\", \"createdAt\", \"updatedAt\"\n        ]\n    });\n\n    return NextResponse.json(updatedUser, { status: 200 });\n\n  } catch (error) {\n    console.error(\"Update profile error:\", error);\n    return NextResponse.json({ message: \"Terjadi kesalahan internal server.\" }, { status: 500 });\n  }\n}\n\n"],"names":[],"mappings":"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","debugId":null}}]
}