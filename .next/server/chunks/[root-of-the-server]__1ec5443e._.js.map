{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/user.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, OneToMany, Index } from \"typeorm\";\nimport type { Role } from \"@/types\";\n// AccountEntity, SessionEntity, and VerificationTokenEntity are not needed for custom token auth\n// import type { AccountEntity } from \"./account.entity\";\n// import type { SessionEntity } from \"./session.entity\";\nimport type { StrukturKurikulumEntity } from \"./struktur-kurikulum.entity\";\nimport type { MateriAjarEntity } from \"./materi-ajar.entity\";\nimport type { SilabusEntity } from \"./silabus.entity\";\nimport type { RppEntity } from \"./rpp.entity\";\nimport type { JadwalPelajaranEntity } from \"./jadwal-pelajaran.entity\";\nimport type { TugasEntity } from \"./tugas.entity\";\nimport type { TestEntity } from \"./test.entity\";\n\n@Entity({ name: \"users\" })\nexport class UserEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Column({ type: \"varchar\", nullable: true })\n  name?: string | null; \n\n  @Index({ unique: true })\n  @Column({ type: \"varchar\"})\n  email!: string;\n\n  @Column({ type: \"timestamp\", nullable: true })\n  emailVerified?: Date | null;\n\n  @Column({ type: \"varchar\", nullable: true })\n  image?: string | null; \n\n  @Column({ type: \"varchar\" }) \n  passwordHash!: string;\n\n  @Column({\n    type: \"enum\",\n    enum: ['admin', 'guru', 'siswa', 'pimpinan', 'superadmin'],\n    default: 'siswa'\n  })\n  role!: Role;\n\n  @Column({ type: \"boolean\", default: false })\n  isVerified!: boolean; \n\n  @Column({ type: \"varchar\", nullable: true })\n  fullName?: string | null;\n\n  @Column({ type: \"varchar\", nullable: true })\n  phone?: string | null;\n\n  @Column({ type: \"text\", nullable: true })\n  address?: string | null;\n\n  @Column({ type: \"date\", nullable: true })\n  birthDate?: string | null; \n\n  @Column({ type: \"text\", nullable: true })\n  bio?: string | null;\n\n  @Column({ type: \"varchar\", nullable: true })\n  nis?: string | null; \n\n  @Column({ type: \"varchar\", nullable: true })\n  nip?: string | null; \n\n  @Column({ type: \"date\", nullable: true })\n  joinDate?: string | null; \n\n  @Column({ type: \"varchar\", nullable: true })\n  kelasId?: string | null; \n\n  @Column(\"simple-array\", { nullable: true })\n  mataPelajaran?: string[] | null; \n  \n  @Column({ type: \"varchar\", nullable: true })\n  resetPasswordToken?: string | null;\n\n  @Column({ type: \"timestamp with time zone\", nullable: true })\n  resetPasswordExpires?: Date | null;\n\n  @Column({ type: \"varchar\", nullable: true })\n  emailVerificationToken?: string | null;\n\n  @Column({ type: \"timestamp with time zone\", nullable: true })\n  emailVerificationTokenExpires?: Date | null;\n  \n  // @OneToMany(\"AccountEntity\", (account: AccountEntity) => account.user)\n  // accounts?: AccountEntity[];\n\n  // @OneToMany(\"SessionEntity\", (session: SessionEntity) => session.user)\n  // sessions?: SessionEntity[];\n\n  @OneToMany(\"StrukturKurikulumEntity\", (ske: StrukturKurikulumEntity) => ske.guruPengampu)\n  strukturKurikulumDiajar?: StrukturKurikulumEntity[];\n\n  @OneToMany(\"MateriAjarEntity\", (materi: MateriAjarEntity) => materi.uploader)\n  materiAjarUploaded?: MateriAjarEntity[];\n\n  @OneToMany(\"SilabusEntity\", (silabus: SilabusEntity) => silabus.uploader)\n  silabusUploaded?: SilabusEntity[];\n\n  @OneToMany(\"RppEntity\", (rpp: RppEntity) => rpp.uploader)\n  rppUploaded?: RppEntity[];\n\n  @OneToMany(\"JadwalPelajaranEntity\", (jadwal: JadwalPelajaranEntity) => jadwal.guru)\n  jadwalMengajar?: JadwalPelajaranEntity[];\n\n  @OneToMany(\"TugasEntity\", (tugas: TugasEntity) => tugas.uploader)\n  tugasUploaded?: TugasEntity[];\n\n  @OneToMany(\"TestEntity\", (test: TestEntity) => test.uploader)\n  testUploaded?: TestEntity[];\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;;;;;;;AAcO,MAAM;IAEX,GAAY;IAGZ,KAAqB;IAIrB,MAAe;IAGf,cAA4B;IAG5B,MAAsB;IAGtB,aAAsB;IAOtB,KAAY;IAGZ,WAAqB;IAGrB,SAAyB;IAGzB,MAAsB;IAGtB,QAAwB;IAGxB,UAA0B;IAG1B,IAAoB;IAGpB,IAAoB;IAGpB,IAAoB;IAGpB,SAAyB;IAGzB,QAAwB;IAGxB,cAAgC;IAGhC,mBAAmC;IAGnC,qBAAmC;IAGnC,uBAAuC;IAGvC,8BAA4C;IAE5C,wEAAwE;IACxE,8BAA8B;IAE9B,wEAAwE;IACxE,8BAA8B;IAG9B,wBAAoD;IAGpD,mBAAwC;IAGxC,gBAAkC;IAGlC,YAA0B;IAG1B,eAAyC;IAGzC,cAA8B;IAG9B,aAA4B;IAG5B,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QApGY,MAAM;QAAW,UAAU;;;;;;QAG5B,QAAQ;;;QACP,MAAM;;;;;;QAGN,MAAM;QAAa,UAAU;;;;;;QAG7B,MAAM;QAAW,UAAU;;;;;;QAG3B,MAAM;;;;;;QAId,MAAM;QACN,MAAM;YAAC;YAAS;YAAQ;YAAS;YAAY;SAAa;QAC1D,SAAS;;;;;;QAID,MAAM;QAAW,SAAS;;;;;;QAG1B,MAAM;QAAW,UAAU;;;;;;QAG3B,MAAM;QAAW,UAAU;;;;;;QAG3B,MAAM;QAAQ,UAAU;;;;;;QAGxB,MAAM;QAAQ,UAAU;;;;;;QAGxB,MAAM;QAAQ,UAAU;;;;;;QAGxB,MAAM;QAAW,UAAU;;;;;;QAG3B,MAAM;QAAW,UAAU;;;;;;QAG3B,MAAM;QAAQ,UAAU;;;;;;QAGxB,MAAM;QAAW,UAAU;;;;;;QAGX,UAAU;;;;;;QAG1B,MAAM;QAAW,UAAU;;;;;;QAG3B,MAAM;QAA4B,UAAU;;;;;;QAG5C,MAAM;QAAW,UAAU;;;;;;QAG3B,MAAM;QAA4B,UAAU;;;;;sLASf,MAAiC,IAAI,YAAY;;;;+KAGxD,SAA6B,OAAO,QAAQ;;;;4KAG/C,UAA2B,QAAQ,QAAQ;;;;wKAG/C,MAAmB,IAAI,QAAQ;;;;oLAGnB,SAAkC,OAAO,IAAI;;;;0KAGvD,QAAuB,MAAM,QAAQ;;;;yKAGtC,OAAqB,KAAK,QAAQ;;;;;QAGxC,MAAM;;;;;;QAGN,MAAM;;;;;;QAvGlB,MAAM","debugId":null}},
    {"offset": {"line": 479, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/constants.ts"],"sourcesContent":["\nimport type { Role } from '@/types';\n// Lucide-react icons are removed from this file\n\nexport const APP_NAME = 'EduCentral SMA Az-Bail';\n\nexport const ROLES: Record<Role, string> = {\n  admin: 'Admin',\n  guru: 'Guru',\n  siswa: 'Siswa',\n  pimpinan: 'Pimpinan',\n  superadmin: 'Super Admin',\n};\n\nexport const ROUTES = {\n  HOME: '/',\n  LOGIN: '/login',\n  REGISTER: '/register',\n  VERIFY_EMAIL: '/verify-email',\n  FORGOT_PASSWORD: '/forgot-password',\n  RESET_PASSWORD: '/reset-password',\n  \n  ADMIN_DASHBOARD: '/admin/dashboard',\n  ADMIN_USERS: '/admin/users',\n  ADMIN_KURIKULUM: '/admin/kurikulum',\n  ADMIN_MATA_PELAJARAN: '/admin/mata-pelajaran',\n  ADMIN_JADWAL: '/admin/jadwal',\n  \n  GURU_DASHBOARD: '/guru/dashboard',\n  GURU_PENGAJARAN: '/guru/pengajaran',\n  GURU_TUGAS: '/guru/tugas',\n  GURU_ABSENSI: '/guru/absensi',\n  GURU_MATERI: '/guru/materi',\n  GURU_TEST: '/guru/test',\n  GURU_PENILAIAN: '/guru/penilaian',\n\n  SISWA_DASHBOARD: '/siswa/dashboard',\n  SISWA_JADWAL: '/siswa/jadwal',\n  SISWA_TUGAS: '/siswa/tugas',\n  SISWA_MATERI: '/siswa/materi',\n  SISWA_TEST: '/siswa/test',\n  SISWA_NILAI: '/siswa/nilai',\n\n  PIMPINAN_DASHBOARD: '/pimpinan/dashboard',\n  \n  DATA_VISUALIZATION: '/data-visualization',\n  NOTIFICATIONS: '/notifications', \n  SETTINGS: '/settings', \n};\n\nexport const DEFAULT_USERS_STORAGE_KEY = 'sma_azbail_users_mock';\nexport const AUTH_USER_STORAGE_KEY = 'sma_azbail_auth_user_mock';\n\nexport const SCHOOL_MAJORS = [\"IPA\", \"IPS\"];\nexport const SCHOOL_GRADE_LEVELS = [\"X\", \"XI\", \"XII\"];\nexport const SCHOOL_CLASSES_PER_MAJOR_GRADE = 5;\n\nexport const MOCK_SUBJECTS = [\n  \"Matematika Wajib\", \"Bahasa Indonesia\", \"Bahasa Inggris\", \"Pendidikan Agama\", \"PPKn\", \"Sejarah Indonesia\",\n  \"Fisika\", \"Kimia\", \"Biologi\", \"Matematika Peminatan\", // IPA\n  \"Geografi\", \"Sosiologi\", \"Ekonomi\", \"Sejarah Peminatan\" // IPS\n];\n\nexport const KATEGORI_MAPEL = [\n  \"Wajib Umum\",\n  \"Wajib Peminatan IPA\",\n  \"Wajib Peminatan IPS\",\n  \"Pilihan Lintas Minat\",\n  \"Muatan Lokal\",\n] as const;\n\n// Constants moved from types/index.ts as they don't depend on other types and are used broadly\nexport const KATEGORI_SKL_CONST = [\"Sikap\", \"Pengetahuan\", \"Keterampilan\"] as const;\nexport const FASE_CP_CONST = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"Lainnya\"] as const;\nexport const JENIS_MATERI_AJAR = [\"File\", \"Link\"] as const;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAIO,MAAM,WAAW;AAEjB,MAAM,QAA8B;IACzC,OAAO;IACP,MAAM;IACN,OAAO;IACP,UAAU;IACV,YAAY;AACd;AAEO,MAAM,SAAS;IACpB,MAAM;IACN,OAAO;IACP,UAAU;IACV,cAAc;IACd,iBAAiB;IACjB,gBAAgB;IAEhB,iBAAiB;IACjB,aAAa;IACb,iBAAiB;IACjB,sBAAsB;IACtB,cAAc;IAEd,gBAAgB;IAChB,iBAAiB;IACjB,YAAY;IACZ,cAAc;IACd,aAAa;IACb,WAAW;IACX,gBAAgB;IAEhB,iBAAiB;IACjB,cAAc;IACd,aAAa;IACb,cAAc;IACd,YAAY;IACZ,aAAa;IAEb,oBAAoB;IAEpB,oBAAoB;IACpB,eAAe;IACf,UAAU;AACZ;AAEO,MAAM,4BAA4B;AAClC,MAAM,wBAAwB;AAE9B,MAAM,gBAAgB;IAAC;IAAO;CAAM;AACpC,MAAM,sBAAsB;IAAC;IAAK;IAAM;CAAM;AAC9C,MAAM,iCAAiC;AAEvC,MAAM,gBAAgB;IAC3B;IAAoB;IAAoB;IAAkB;IAAoB;IAAQ;IACtF;IAAU;IAAS;IAAW;IAC9B;IAAY;IAAa;IAAW,oBAAoB,MAAM;CAC/D;AAEM,MAAM,iBAAiB;IAC5B;IACA;IACA;IACA;IACA;CACD;AAGM,MAAM,qBAAqB;IAAC;IAAS;IAAe;CAAe;AACnE,MAAM,gBAAgB;IAAC;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;CAAU;AAC/D,MAAM,oBAAoB;IAAC;IAAQ;CAAO","debugId":null}},
    {"offset": {"line": 591, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/mata-pelajaran.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, Index, OneToMany } from \"typeorm\";\nimport { KATEGORI_MAPEL } from \"@/lib/constants\";\nimport type { KategoriMapelType } from \"@/entities/mata-pelajaran.entity\"; \nimport type { StrukturKurikulumEntity } from \"./struktur-kurikulum.entity\";\nimport type { SilabusEntity } from \"./silabus.entity\";\nimport type { RppEntity } from \"./rpp.entity\";\nimport type { JadwalPelajaranEntity } from \"./jadwal-pelajaran.entity\";\n\n// export type KategoriMapelType = typeof KATEGORI_MAPEL[number]; // Already defined\n\n@Entity({ name: \"mata_pelajaran\" })\nexport class MataPelajaranEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Index({ unique: true })\n  @Column({ type: \"varchar\", length: 50 })\n  kode!: string;\n\n  @Column({ type: \"varchar\", length: 255 })\n  nama!: string;\n\n  @Column({ type: \"text\", nullable: true })\n  deskripsi?: string | null;\n\n  @Column({\n    type: \"enum\",\n    enum: KATEGORI_MAPEL, \n  })\n  kategori!: KategoriMapelType;\n\n  @OneToMany(\"StrukturKurikulumEntity\", (ske: StrukturKurikulumEntity) => ske.mapel)\n  strukturKurikulumEntries?: StrukturKurikulumEntity[];\n\n  @OneToMany(\"SilabusEntity\", (silabus: SilabusEntity) => silabus.mapel)\n  silabusList?: SilabusEntity[];\n\n  @OneToMany(\"RppEntity\", (rpp: RppEntity) => rpp.mapel)\n  rppList?: RppEntity[];\n\n  @OneToMany(\"JadwalPelajaranEntity\", (jadwal) => jadwal.mapel)\n  jadwalPelajaranEntries?: JadwalPelajaranEntity[];\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;AACA;;;;;;;;AAUO,MAAM;IAEX,GAAY;IAIZ,KAAc;IAGd,KAAc;IAGd,UAA0B;IAM1B,SAA6B;IAG7B,yBAAqD;IAGrD,YAA8B;IAG9B,QAAsB;IAGtB,uBAAiD;IAGjD,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QAjCW,QAAQ;;;QACP,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;QAAQ,UAAU;;;;;;QAIhC,MAAM;QACN,MAAM,yHAAA,CAAA,iBAAc;;;;;sLAIiB,MAAiC,IAAI,KAAK;;;;4KAGpD,UAA2B,QAAQ,KAAK;;;;wKAG5C,MAAmB,IAAI,KAAK;;;;oLAGhB,SAAW,OAAO,KAAK;;;;;QAGxC,MAAM;;;;;;QAGN,MAAM;;;;;;QApClB,MAAM","debugId":null}},
    {"offset": {"line": 693, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/types/index.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { KATEGORI_SKL_CONST, FASE_CP_CONST, JENIS_MATERI_AJAR } from \"@/lib/constants\";\n// It's generally better to import the specific entity types if they are simple and don't cause circular dependencies\n// or if you need to strictly type the shape of related data.\n// However, for Pick utility, importing the full entity and picking fields is also common.\nimport type { SlotWaktuEntity } from \"@/entities/slot-waktu.entity\";\nimport type { MataPelajaranEntity } from \"@/entities/mata-pelajaran.entity\";\nimport type { UserEntity } from \"@/entities/user.entity\";\nimport type { RuanganEntity } from \"@/entities/ruangan.entity\";\nimport type { TestTipe as TestEntityType, TestStatus as TestStatusType } from \"@/entities/test.entity\";\n\n\nexport type Role = 'admin' | 'guru' | 'siswa' | 'pimpinan' | 'superadmin';\n\nexport interface User {\n  id: string;\n  email: string;\n  name?: string | null;\n  role: Role;\n  isVerified: boolean;\n  avatarUrl?: string | null;\n\n  fullName?: string | null;\n  phone?: string | null;\n  address?: string | null;\n  birthDate?: string | null;\n  bio?: string | null;\n  nis?: string | null;\n  nip?: string | null;\n  joinDate?: string | null;\n  kelas?: string | null; // For Siswa, this is their class name. For Admin User Form, it's string input.\n  mataPelajaran?: string | null; // For Guru, single string of subject names. For Admin User Form, string input.\n}\n\nexport interface NavItem {\n  href: string;\n  label: string;\n  icon: React.ElementType;\n  roles: Role[];\n  subItems?: NavItem[];\n}\n\nexport type KategoriSklType = typeof KATEGORI_SKL_CONST[number];\n\nexport interface SKL {\n  id: string;\n  kode: string;\n  deskripsi: string;\n  kategori: KategoriSklType;\n  createdAt?: Date | string;\n  updatedAt?: Date | string;\n}\n\nexport type FaseCpType = typeof FASE_CP_CONST[number];\n\nexport interface CapaianPembelajaran {\n  id: string;\n  kode: string;\n  deskripsi: string;\n  fase: FaseCpType;\n  elemen: string;\n  createdAt?: Date | string;\n  updatedAt?: Date | string;\n}\n\nexport interface Ruangan {\n  id: string;\n  nama: string;\n  kode: string;\n  kapasitas: number;\n  fasilitas?: string | null;\n  createdAt?: Date | string;\n  updatedAt?: Date | string;\n}\n\nexport interface SlotWaktu {\n  id: string;\n  namaSlot: string;\n  waktuMulai: string; // HH:MM\n  waktuSelesai: string; // HH:MM\n  urutan?: number | null;\n  createdAt?: Date | string;\n  updatedAt?: Date | string;\n}\n\nexport interface StrukturKurikulumItem {\n  id: string;\n  tingkat: string;\n  jurusan: string;\n  mapelId: string;\n  namaMapel: string;\n  alokasiJam: number;\n  guruPengampuId?: string | null;\n  guruPengampuNama?: string | null;\n  createdAt?: Date | string;\n  updatedAt?: Date | string;\n}\n\nexport interface Silabus {\n  id: string;\n  judul: string;\n  mapelId: string;\n  mapel?: Pick<MataPelajaranEntity, 'id' | 'nama' | 'kode'>;\n  kelas: string;\n  deskripsiSingkat?: string | null;\n  namaFileOriginal?: string | null;\n  fileUrl?: string | null;\n  uploaderId: string;\n  uploader?: Pick<UserEntity, 'id' | 'name' | 'fullName' | 'email'>;\n  createdAt?: Date | string;\n  updatedAt?: Date | string;\n}\n\nexport interface RPP {\n  id: string;\n  judul: string;\n  mapelId: string;\n  mapel?: Pick<MataPelajaranEntity, 'id' | 'nama' | 'kode'>;\n  kelas: string;\n  pertemuanKe: number;\n  materiPokok?: string | null;\n  kegiatanPembelajaran?: string | null;\n  penilaian?: string | null;\n  namaFileOriginal?: string | null;\n  fileUrl?: string | null;\n  uploaderId: string;\n  uploader?: Pick<UserEntity, 'id' | 'name' | 'fullName' | 'email'>;\n  createdAt?: Date | string;\n  updatedAt?: Date | string;\n}\n\nexport interface MateriKategori {\n  id: string;\n  nama: string;\n  createdAt?: Date | string;\n  updatedAt?: Date | string;\n}\n\nexport interface MataPelajaran {\n  id: string;\n  kode: string;\n  nama: string;\n  deskripsi?: string | null;\n  kategori: \"Wajib Umum\" | \"Wajib Peminatan IPA\" | \"Wajib Peminatan IPS\" | \"Pilihan Lintas Minat\" | \"Muatan Lokal\";\n  createdAt?: Date | string;\n  updatedAt?: Date | string;\n}\n\nexport type JenisMateriAjarType = typeof JENIS_MATERI_AJAR[number];\n\nexport interface MateriAjar {\n  id: string;\n  judul: string;\n  deskripsi?: string | null;\n  mapelNama: string;\n  jenisMateri: JenisMateriAjarType;\n  namaFileOriginal?: string | null;\n  fileUrl?: string | null;\n  tanggalUpload: string; // YYYY-MM-DD\n  uploaderId: string;\n  uploader?: Pick<UserEntity, 'id' | 'name' | 'fullName' | 'email'>;\n  createdAt?: Date | string;\n  updatedAt?: Date | string;\n}\n\nexport interface JadwalPelajaran {\n  id: string;\n  hari: string;\n  kelas: string;\n  slotWaktuId: string;\n  slotWaktu?: Pick<SlotWaktuEntity, 'id' | 'namaSlot' | 'waktuMulai' | 'waktuSelesai'>;\n  mapelId: string;\n  mapel?: Pick<MataPelajaranEntity, 'id' | 'nama' | 'kode'>;\n  guruId: string;\n  guru?: Pick<UserEntity, 'id' | 'name' | 'fullName' | 'email'>; // Added email for display\n  ruanganId: string;\n  ruangan?: Pick<RuanganEntity, 'id' | 'nama' | 'kode'>;\n  catatan?: string | null;\n  createdAt?: Date | string;\n  updatedAt?: Date | string;\n}\n\nexport interface Tugas {\n  id: string;\n  judul: string;\n  deskripsi?: string | null;\n  mapel: string;\n  kelas: string;\n  tenggat: string; // ISO string from API (Date object in entity)\n  namaFileLampiran?: string | null;\n  fileUrlLampiran?: string | null; // Simulated path\n  uploaderId: string;\n  uploader?: Pick<UserEntity, 'id' | 'name' | 'fullName' | 'email'>;\n  createdAt?: string;\n  updatedAt?: string;\n  // For frontend display, might be mocked or derived\n  terkumpul?: number;\n  totalSiswa?: number;\n  status?: \"Aktif\" | \"Ditutup\" | \"Draf\";\n}\n\n// Re-exporting TestTipe and TestStatus from entity types for use in frontend\nexport type TestTipe = TestEntityType;\nexport type TestStatus = TestStatusType;\n\nexport interface Test {\n  id: string;\n  judul: string;\n  mapel: string;\n  kelas: string;\n  tanggal: string; // ISO string from API (Date object in entity)\n  durasi: number; // dalam menit\n  tipe: TestTipe;\n  status: TestStatus;\n  deskripsi?: string | null;\n  jumlahSoal?: number | null;\n  uploaderId: string;\n  uploader?: Pick<UserEntity, 'id' | 'name' | 'fullName' | 'email'>;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\n\nexport {\n    KATEGORI_SKL_CONST as KATEGORI_SKL,\n    FASE_CP_CONST as FASE_CP,\n    JENIS_MATERI_AJAR // Now correctly re-exporting the imported constant\n};\n\n"],"names":[],"mappings":";AACA,+PAA2B,uCAAuC;AAClE","debugId":null}},
    {"offset": {"line": 725, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/skl.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, Index } from \"typeorm\";\nimport { KATEGORI_SKL, type KategoriSklType } from \"@/types\";\n\n@Entity({ name: \"standar_kompetensi_lulusan\" })\nexport class SklEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Index({ unique: true })\n  @Column({ type: \"varchar\", length: 50 })\n  kode!: string;\n\n  @Column({ type: \"text\" })\n  deskripsi!: string;\n\n  @Column({\n    type: \"enum\",\n    enum: KATEGORI_SKL,\n  })\n  kategori!: KategoriSklType;\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;AACA;AAAA;;;;;;;;AAGO,MAAM;IAEX,GAAY;IAIZ,KAAc;IAGd,UAAmB;IAMnB,SAA2B;IAG3B,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QAlBW,QAAQ;;;QACP,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;;;;;;QAId,MAAM;QACN,MAAM,+KAAA,CAAA,eAAY;;;;;;QAIA,MAAM;;;;;;QAGN,MAAM;;;;;;QArBlB,MAAM","debugId":null}},
    {"offset": {"line": 809, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/cp.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, Index } from \"typeorm\";\nimport { FASE_CP, type FaseCpType } from \"@/types\";\n\n@Entity({ name: \"capaian_pembelajaran\" })\nexport class CpEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Index({ unique: true })\n  @Column({ type: \"varchar\", length: 100 }) // Kode CP bisa panjang\n  kode!: string;\n\n  @Column({ type: \"text\" })\n  deskripsi!: string;\n\n  @Column({\n    type: \"enum\",\n    enum: FASE_CP,\n  })\n  fase!: FaseCpType;\n\n  @Column({ type: \"varchar\", length: 255 })\n  elemen!: string; // Misal: Bilangan, Membaca dan Memirsa, dll.\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;AACA;AAAA;;;;;;;;AAGO,MAAM;IAEX,GAAY;IAIZ,KAAc;IAGd,UAAmB;IAMnB,KAAkB;IAGlB,OAAgB;IAGhB,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QArBW,QAAQ;;;QACP,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;;;;;;QAId,MAAM;QACN,MAAM,qKAAA,CAAA,UAAO;;;;;;QAIL,MAAM;QAAW,QAAQ;;;;;;QAGf,MAAM;;;;;;QAGN,MAAM;;;;;;QAxBlB,MAAM","debugId":null}},
    {"offset": {"line": 891, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/materi-kategori.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, Index } from \"typeorm\";\n\n@Entity({ name: \"materi_kategori\" })\nexport class MateriKategoriEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Index({ unique: true })\n  @Column({ type: \"varchar\", length: 255 })\n  nama!: string;\n  \n  // Tambahkan deskripsi jika diperlukan\n  // @Column({ type: \"text\", nullable: true })\n  // deskripsi?: string | null;\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;;;;;;;AAGO,MAAM;IAEX,GAAY;IAIZ,KAAc;IAEd,sCAAsC;IACtC,4CAA4C;IAC5C,6BAA6B;IAG7B,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QAbW,QAAQ;;;QACP,MAAM;QAAW,QAAQ;;;;;;QAOf,MAAM;;;;;;QAGN,MAAM;;;;;;QAhBlB,MAAM","debugId":null}},
    {"offset": {"line": 950, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/materi-ajar.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, ManyToOne, JoinColumn } from \"typeorm\";\nimport { JENIS_MATERI_AJAR, type JenisMateriAjarType } from \"@/types\";\nimport type { UserEntity } from \"./user.entity\"; // Menggunakan import type\n\n@Entity({ name: \"materi_ajar\" })\nexport class MateriAjarEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Column({ type: \"varchar\", length: 255 })\n  judul!: string;\n\n  @Column({ type: \"text\", nullable: true })\n  deskripsi?: string | null;\n\n  @Column({ type: \"varchar\", length: 255 }) // Menyimpan nama mata pelajaran\n  mapelNama!: string;\n\n  @Column({\n    type: \"enum\",\n    enum: JENIS_MATERI_AJAR,\n  })\n  jenisMateri!: JenisMateriAjarType;\n\n  @Column({ type: \"varchar\", length: 255, nullable: true })\n  namaFileOriginal?: string | null; // Nama file asli saat diunggah\n\n  @Column({ type: \"varchar\", length: 500, nullable: true }) // Bisa URL atau path internal (simulasi)\n  fileUrl?: string | null;\n\n  @Column({ type: \"date\" }) // Hanya tanggal, tanpa waktu\n  tanggalUpload!: string;\n\n  @Column({ type: \"uuid\" })\n  uploaderId!: string;\n\n  @ManyToOne(\"UserEntity\", { onDelete: \"SET NULL\", nullable: true }) // Jika uploader dihapus, set uploaderId jadi NULL\n  @JoinColumn({ name: \"uploaderId\" })\n  uploader?: UserEntity;\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;AACA;AAAA;;;;;;;;AAIO,MAAM;IAEX,GAAY;IAGZ,MAAe;IAGf,UAA0B;IAG1B,UAAmB;IAMnB,YAAkC;IAGlC,iBAAiC;IAGjC,QAAwB;IAGxB,cAAuB;IAGvB,WAAoB;IAIpB,SAAsB;IAGtB,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QApCY,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;QAAQ,UAAU;;;;;;QAGxB,MAAM;QAAW,QAAQ;;;;;;QAIjC,MAAM;QACN,MAAM,yHAAA,CAAA,oBAAiB;;;;;;QAIf,MAAM;QAAW,QAAQ;QAAK,UAAU;;;;;;QAGxC,MAAM;QAAW,QAAQ;QAAK,UAAU;;;;;;QAGxC,MAAM;;;;;;QAGN,MAAM;;;;;;QAGW,UAAU;QAAY,UAAU;;;QAC7C,MAAM;;;;;;QAGA,MAAM;;;;;;QAGN,MAAM;;;;;;QAvClB,MAAM","debugId":null}},
    {"offset": {"line": 1073, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/struktur-kurikulum.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, ManyToOne, JoinColumn, Index } from \"typeorm\";\nimport type { MataPelajaranEntity } from \"./mata-pelajaran.entity\";\nimport type { UserEntity } from \"./user.entity\";\n\n@Entity({ name: \"struktur_kurikulum\" })\n@Index([\"tingkat\", \"jurusan\", \"mapel\"], { unique: true }) // Mencegah duplikasi mapel yang sama dalam tingkat & jurusan yang sama\nexport class StrukturKurikulumEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Column({ type: \"varchar\", length: 10 }) // Misal: X, XI, XII\n  tingkat!: string;\n\n  @Column({ type: \"varchar\", length: 50 }) // Misal: IPA, IPS, Umum\n  jurusan!: string;\n\n  @Column({ type: \"uuid\" })\n  mapelId!: string;\n\n  @ManyToOne(\"MataPelajaranEntity\", (mapel) => mapel.strukturKurikulumEntries, { onDelete: \"CASCADE\" })\n  @JoinColumn({ name: \"mapelId\" })\n  mapel!: MataPelajaranEntity;\n\n  @Column({ type: \"int\" })\n  alokasiJam!: number; // Alokasi jam per minggu\n\n  @Column({ type: \"uuid\", nullable: true })\n  guruPengampuId?: string | null;\n\n  // Relasi ke UserEntity (Guru) - opsional\n  @ManyToOne(\"UserEntity\", (user) => user.strukturKurikulumDiajar, { onDelete: \"SET NULL\", nullable: true })\n  @JoinColumn({ name: \"guruPengampuId\" })\n  guruPengampu?: UserEntity | null;\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;;;;;;;AAMO,MAAM;IAEX,GAAY;IAGZ,QAAiB;IAGjB,QAAiB;IAGjB,QAAiB;IAIjB,MAA4B;IAG5B,WAAoB;IAGpB,eAA+B;IAE/B,yCAAyC;IAGzC,aAAiC;IAGjC,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QA7BY,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;;;;;kLAGmB,QAAU,MAAM,wBAAwB;QAAI,UAAU;;;QAC3E,MAAM;;;;;;QAGV,MAAM;;;;;;QAGN,MAAM;QAAQ,UAAU;;;;;yKAIR,OAAS,KAAK,uBAAuB;QAAI,UAAU;QAAY,UAAU;;;QACrF,MAAM;;;;;;QAGA,MAAM;;;;;;QAGN,MAAM;;;;;;QAjClB,MAAM;;;QACR;QAAW;QAAW;;QAAY,QAAQ","debugId":null}},
    {"offset": {"line": 1185, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/silabus.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, ManyToOne, JoinColumn } from \"typeorm\";\nimport type { MataPelajaranEntity } from \"./mata-pelajaran.entity\";\nimport type { UserEntity } from \"./user.entity\";\n\n@Entity({ name: \"silabus\" })\nexport class SilabusEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Column({ type: \"varchar\", length: 255 })\n  judul!: string;\n\n  @Column({ type: \"uuid\" })\n  mapelId!: string;\n\n  @ManyToOne(\"MataPelajaranEntity\", (mapel) => mapel.silabusList, { onDelete: \"CASCADE\" })\n  @JoinColumn({ name: \"mapelId\" })\n  mapel!: MataPelajaranEntity;\n\n  @Column({ type: \"varchar\", length: 100 }) // e.g., \"X IPA 1\", \"Semua Kelas XI\"\n  kelas!: string;\n\n  @Column({ type: \"text\", nullable: true })\n  deskripsiSingkat?: string | null;\n\n  @Column({ type: \"varchar\", length: 255, nullable: true })\n  namaFileOriginal?: string | null;\n\n  @Column({ type: \"varchar\", length: 500, nullable: true }) // Path simulasi ke file\n  fileUrl?: string | null;\n\n  @Column({ type: \"uuid\" })\n  uploaderId!: string;\n\n  @ManyToOne(\"UserEntity\", (user) => user.silabusUploaded, { onDelete: \"SET NULL\", nullable: true })\n  @JoinColumn({ name: \"uploaderId\" })\n  uploader?: UserEntity | null;\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;;;;;;;AAKO,MAAM;IAEX,GAAY;IAGZ,MAAe;IAGf,QAAiB;IAIjB,MAA4B;IAG5B,MAAe;IAGf,iBAAiC;IAGjC,iBAAiC;IAGjC,QAAwB;IAGxB,WAAoB;IAIpB,SAA6B;IAG7B,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QAlCY,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;;;;;kLAGmB,QAAU,MAAM,WAAW;QAAI,UAAU;;;QAC9D,MAAM;;;;;;QAGV,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;QAAQ,UAAU;;;;;;QAGxB,MAAM;QAAW,QAAQ;QAAK,UAAU;;;;;;QAGxC,MAAM;QAAW,QAAQ;QAAK,UAAU;;;;;;QAGxC,MAAM;;;;;yKAGU,OAAS,KAAK,eAAe;QAAI,UAAU;QAAY,UAAU;;;QAC7E,MAAM;;;;;;QAGA,MAAM;;;;;;QAGN,MAAM;;;;;;QArClB,MAAM","debugId":null}},
    {"offset": {"line": 1307, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/rpp.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, ManyToOne, JoinColumn } from \"typeorm\";\nimport type { MataPelajaranEntity } from \"./mata-pelajaran.entity\";\nimport type { UserEntity } from \"./user.entity\";\n\n@Entity({ name: \"rpp\" }) // Rencana Pelaksanaan Pembelajaran\nexport class RppEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Column({ type: \"varchar\", length: 255 })\n  judul!: string;\n\n  @Column({ type: \"uuid\" })\n  mapelId!: string;\n\n  @ManyToOne(\"MataPelajaranEntity\", (mapel) => mapel.rppList, { onDelete: \"CASCADE\" })\n  @JoinColumn({ name: \"mapelId\" })\n  mapel!: MataPelajaranEntity;\n\n  @Column({ type: \"varchar\", length: 100 })\n  kelas!: string;\n\n  @Column({ type: \"int\" })\n  pertemuanKe!: number;\n\n  @Column({ type: \"text\", nullable: true })\n  materiPokok?: string | null;\n\n  @Column({ type: \"text\", nullable: true })\n  kegiatanPembelajaran?: string | null;\n\n  @Column({ type: \"text\", nullable: true })\n  penilaian?: string | null;\n\n  @Column({ type: \"varchar\", length: 255, nullable: true })\n  namaFileOriginal?: string | null;\n\n  @Column({ type: \"varchar\", length: 500, nullable: true }) // Path simulasi ke file\n  fileUrl?: string | null;\n\n  @Column({ type: \"uuid\" })\n  uploaderId!: string;\n\n  @ManyToOne(\"UserEntity\", (user) => user.rppUploaded, { onDelete: \"SET NULL\", nullable: true })\n  @JoinColumn({ name: \"uploaderId\" })\n  uploader?: UserEntity | null;\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;;;;;;;AAKO,MAAM;IAEX,GAAY;IAGZ,MAAe;IAGf,QAAiB;IAIjB,MAA4B;IAG5B,MAAe;IAGf,YAAqB;IAGrB,YAA4B;IAG5B,qBAAqC;IAGrC,UAA0B;IAG1B,iBAAiC;IAGjC,QAAwB;IAGxB,WAAoB;IAIpB,SAA6B;IAG7B,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QA3CY,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;;;;;kLAGmB,QAAU,MAAM,OAAO;QAAI,UAAU;;;QAC1D,MAAM;;;;;;QAGV,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;;;;;;QAGN,MAAM;QAAQ,UAAU;;;;;;QAGxB,MAAM;QAAQ,UAAU;;;;;;QAGxB,MAAM;QAAQ,UAAU;;;;;;QAGxB,MAAM;QAAW,QAAQ;QAAK,UAAU;;;;;;QAGxC,MAAM;QAAW,QAAQ;QAAK,UAAU;;;;;;QAGxC,MAAM;;;;;yKAGU,OAAS,KAAK,WAAW;QAAI,UAAU;QAAY,UAAU;;;QACzE,MAAM;;;;;;QAGA,MAAM;;;;;;QAGN,MAAM;;;;;;QA9ClB,MAAM","debugId":null}},
    {"offset": {"line": 1452, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/ruangan.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, Index, OneToMany } from \"typeorm\";\nimport type { JadwalPelajaranEntity } from \"./jadwal-pelajaran.entity\";\n\n@Entity({ name: \"ruangan\" })\nexport class RuanganEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Column({ type: \"varchar\", length: 255 })\n  nama!: string;\n\n  @Index({ unique: true })\n  @Column({ type: \"varchar\", length: 50 })\n  kode!: string;\n\n  @Column({ type: \"int\" })\n  kapasitas!: number;\n\n  @Column({ type: \"text\", nullable: true })\n  fasilitas?: string | null;\n\n  @OneToMany(\"JadwalPelajaranEntity\", (jadwal) => jadwal.ruangan)\n  jadwalPelajaranEntries?: JadwalPelajaranEntity[];\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;;;;;;;AAIO,MAAM;IAEX,GAAY;IAGZ,KAAc;IAId,KAAc;IAGd,UAAmB;IAGnB,UAA0B;IAG1B,uBAAiD;IAGjD,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QArBY,MAAM;QAAW,QAAQ;;;;;;QAG1B,QAAQ;;;QACP,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;;;;;;QAGN,MAAM;QAAQ,UAAU;;;;;oLAGG,SAAW,OAAO,OAAO;;;;;QAG1C,MAAM;;;;;;QAGN,MAAM;;;;;;QAxBlB,MAAM","debugId":null}},
    {"offset": {"line": 1536, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/slot-waktu.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, Index, OneToMany } from \"typeorm\";\nimport type { JadwalPelajaranEntity } from \"./jadwal-pelajaran.entity\";\n\n@Entity({ name: \"slot_waktu\" })\nexport class SlotWaktuEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Index({ unique: true }) // Nama slot sebaiknya unik untuk kemudahan referensi\n  @Column({ type: \"varchar\", length: 100 })\n  namaSlot!: string;\n\n  @Column({ type: \"time\" }) // Format \"HH:MM:SS\" atau \"HH:MM\"\n  waktuMulai!: string;\n\n  @Column({ type: \"time\" })\n  waktuSelesai!: string;\n\n  @Column({ type: \"int\", nullable: true }) // Untuk pengurutan custom jika diperlukan\n  urutan?: number | null;\n\n  @OneToMany(\"JadwalPelajaranEntity\", (jadwal) => jadwal.slotWaktu)\n  jadwalPelajaranEntries?: JadwalPelajaranEntity[];\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;;;;;;;AAIO,MAAM;IAEX,GAAY;IAIZ,SAAkB;IAGlB,WAAoB;IAGpB,aAAsB;IAGtB,OAAuB;IAGvB,uBAAiD;IAGjD,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QArBW,QAAQ;;;QACP,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;;;;;;QAGN,MAAM;;;;;;QAGN,MAAM;QAAO,UAAU;;;;;oLAGI,SAAW,OAAO,SAAS;;;;;QAG5C,MAAM;;;;;;QAGN,MAAM;;;;;;QAxBlB,MAAM","debugId":null}},
    {"offset": {"line": 1619, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/jadwal-pelajaran.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, ManyToOne, JoinColumn, Index } from \"typeorm\";\nimport type { SlotWaktuEntity } from \"./slot-waktu.entity\";\nimport type { MataPelajaranEntity } from \"./mata-pelajaran.entity\";\nimport type { UserEntity } from \"./user.entity\";\nimport type { RuanganEntity } from \"./ruangan.entity\";\n\n@Entity({ name: \"jadwal_pelajaran\" })\n// Mencegah kelas yang sama memiliki dua jadwal berbeda pada slot waktu yang sama di hari yang sama\n@Index([\"hari\", \"kelas\", \"slotWaktuId\"], { unique: true })\n// Indeks untuk membantu query cepat dan deteksi konflik guru\n@Index([\"hari\", \"guruId\", \"slotWaktuId\"])\n// Indeks untuk membantu query cepat dan deteksi konflik ruangan\n@Index([\"hari\", \"ruanganId\", \"slotWaktuId\"])\nexport class JadwalPelajaranEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Column({ type: \"varchar\", length: 20 }) // Senin, Selasa, dll.\n  hari!: string;\n\n  @Column({ type: \"varchar\", length: 100 }) // Misal: \"X IPA 1\", \"XI IPS Semua\"\n  kelas!: string;\n\n  @Column({ type: \"uuid\" })\n  slotWaktuId!: string;\n\n  @ManyToOne(\"SlotWaktuEntity\", (slot) => slot.jadwalPelajaranEntries, { onDelete: \"CASCADE\", eager: true }) // eager load slot detail\n  @JoinColumn({ name: \"slotWaktuId\" })\n  slotWaktu!: SlotWaktuEntity;\n\n  @Column({ type: \"uuid\" })\n  mapelId!: string;\n\n  @ManyToOne(\"MataPelajaranEntity\", (mapel) => mapel.jadwalPelajaranEntries, { onDelete: \"CASCADE\", eager: true }) // eager load mapel detail\n  @JoinColumn({ name: \"mapelId\" })\n  mapel!: MataPelajaranEntity;\n\n  @Column({ type: \"uuid\" })\n  guruId!: string;\n\n  @ManyToOne(\"UserEntity\", (user) => user.jadwalMengajar, { onDelete: \"CASCADE\", eager: true }) // eager load guru detail\n  @JoinColumn({ name: \"guruId\" })\n  guru!: UserEntity;\n\n  @Column({ type: \"uuid\" })\n  ruanganId!: string;\n\n  @ManyToOne(\"RuanganEntity\", (ruangan) => ruangan.jadwalPelajaranEntries, { onDelete: \"CASCADE\", eager: true }) // eager load ruangan detail\n  @JoinColumn({ name: \"ruanganId\" })\n  ruangan!: RuanganEntity;\n  \n  @Column({ type: \"text\", nullable: true })\n  catatan?: string | null;\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;;;;;;;AAaO,MAAM;IAEX,GAAY;IAGZ,KAAc;IAGd,MAAe;IAGf,YAAqB;IAIrB,UAA4B;IAG5B,QAAiB;IAIjB,MAA4B;IAG5B,OAAgB;IAIhB,KAAkB;IAGlB,UAAmB;IAInB,QAAwB;IAGxB,QAAwB;IAGxB,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QA1CY,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;;;;;8KAGe,OAAS,KAAK,sBAAsB;QAAI,UAAU;QAAW,OAAO;;;QACrF,MAAM;;;;;;QAGV,MAAM;;;;;kLAGmB,QAAU,MAAM,sBAAsB;QAAI,UAAU;QAAW,OAAO;;;QAC3F,MAAM;;;;;;QAGV,MAAM;;;;;yKAGU,OAAS,KAAK,cAAc;QAAI,UAAU;QAAW,OAAO;;;QACxE,MAAM;;;;;;QAGV,MAAM;;;;;4KAGa,UAAY,QAAQ,sBAAsB;QAAI,UAAU;QAAW,OAAO;;;QACzF,MAAM;;;;;;QAGV,MAAM;QAAQ,UAAU;;;;;;QAGd,MAAM;;;;;;QAGN,MAAM;;;;;;QAnDlB,MAAM;;;QAER;QAAQ;QAAS;;QAAkB,QAAQ;;;QAE3C;QAAQ;QAAU;;;QAElB;QAAQ;QAAa","debugId":null}},
    {"offset": {"line": 1777, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/tugas.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, ManyToOne, JoinColumn } from \"typeorm\";\nimport type { UserEntity } from \"./user.entity\";\n\n@Entity({ name: \"tugas\" })\nexport class TugasEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Column({ type: \"varchar\", length: 255 })\n  judul!: string;\n\n  @Column({ type: \"text\", nullable: true })\n  deskripsi?: string | null;\n\n  @Column({ type: \"varchar\", length: 255 }) // Menyimpan nama mata pelajaran\n  mapel!: string;\n\n  @Column({ type: \"varchar\", length: 255 }) // Menyimpan nama kelas atau daftar kelas\n  kelas!: string;\n\n  @Column({ type: \"timestamp with time zone\" })\n  tenggat!: Date;\n\n  @Column({ type: \"varchar\", length: 255, nullable: true })\n  namaFileLampiran?: string | null;\n\n  @Column({ type: \"varchar\", length: 500, nullable: true }) // Path simulasi ke file\n  fileUrlLampiran?: string | null;\n\n  @Column({ type: \"uuid\" })\n  uploaderId!: string;\n\n  @ManyToOne(\"UserEntity\", { onDelete: \"CASCADE\", nullable: false }) // Jika uploader dihapus, tugas juga terhapus\n  @JoinColumn({ name: \"uploaderId\" })\n  uploader!: UserEntity; // Relasi ke UserEntity\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;;;;;;;AAIO,MAAM;IAEX,GAAY;IAGZ,MAAe;IAGf,UAA0B;IAG1B,MAAe;IAGf,MAAe;IAGf,QAAe;IAGf,iBAAiC;IAGjC,gBAAgC;IAGhC,WAAoB;IAIpB,SAAsB;IAGtB,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QAjCY,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;QAAQ,UAAU;;;;;;QAGxB,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;;;;;;QAGN,MAAM;QAAW,QAAQ;QAAK,UAAU;;;;;;QAGxC,MAAM;QAAW,QAAQ;QAAK,UAAU;;;;;;QAGxC,MAAM;;;;;;QAGW,UAAU;QAAW,UAAU;;;QAC5C,MAAM;;;;;;QAGA,MAAM;;;;;;QAGN,MAAM;;;;;;QApClB,MAAM","debugId":null}},
    {"offset": {"line": 1897, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/entities/test.entity.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, ManyToOne, JoinColumn } from \"typeorm\";\nimport type { UserEntity } from \"./user.entity\"; // Menggunakan import type\n\nexport type TestTipe = \"Kuis\" | \"Ulangan Harian\" | \"UTS\" | \"UAS\" | \"Lainnya\";\nexport type TestStatus = \"Draf\" | \"Terjadwal\" | \"Berlangsung\" | \"Selesai\" | \"Dinilai\"; // Ditambah \"Menunggu Hasil\" jika perlu\n\n@Entity({ name: \"tests\" })\nexport class TestEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id!: string;\n\n  @Column({ type: \"varchar\", length: 255 })\n  judul!: string;\n\n  @Column({ type: \"varchar\", length: 255 }) // Nama mata pelajaran\n  mapel!: string;\n\n  @Column({ type: \"varchar\", length: 255 }) // Bisa \"Semua Kelas X\", \"X IPA 1, X IPA 2\"\n  kelas!: string;\n\n  @Column({ type: \"timestamp with time zone\" })\n  tanggal!: Date; // Tanggal dan waktu pelaksanaan\n\n  @Column({ type: \"int\" }) // Durasi dalam menit\n  durasi!: number;\n\n  @Column({\n    type: \"enum\",\n    enum: [\"Kuis\", \"Ulangan Harian\", \"UTS\", \"UAS\", \"Lainnya\"],\n  })\n  tipe!: TestTipe;\n\n  @Column({\n    type: \"enum\",\n    enum: [\"Draf\", \"Terjadwal\", \"Berlangsung\", \"Selesai\", \"Dinilai\"], // \"Menunggu Hasil\" bisa jadi alias \"Selesai\"\n    default: \"Draf\",\n  })\n  status!: TestStatus;\n\n  @Column({ type: \"text\", nullable: true })\n  deskripsi?: string | null;\n\n  @Column({ type: \"int\", nullable: true })\n  jumlahSoal?: number | null;\n\n  @Column({ type: \"uuid\" })\n  uploaderId!: string;\n\n  @ManyToOne(\"UserEntity\", (user) => user.testUploaded, { onDelete: \"CASCADE\", nullable: false })\n  @JoinColumn({ name: \"uploaderId\" })\n  uploader!: UserEntity;\n\n  @CreateDateColumn({ type: \"timestamp with time zone\" })\n  createdAt!: Date;\n\n  @UpdateDateColumn({ type: \"timestamp with time zone\" })\n  updatedAt!: Date;\n}\n"],"names":[],"mappings":";;;;;AACA,+PAA2B,uCAAuC;AAClE;;;;;;;AAOO,MAAM;IAEX,GAAY;IAGZ,MAAe;IAGf,MAAe;IAGf,MAAe;IAGf,QAAe;IAGf,OAAgB;IAMhB,KAAgB;IAOhB,OAAoB;IAGpB,UAA0B;IAG1B,WAA2B;IAG3B,WAAoB;IAIpB,SAAsB;IAGtB,UAAiB;IAGjB,UAAiB;AACnB;;;;;;;QA9CY,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;QAAW,QAAQ;;;;;;QAGzB,MAAM;;;;;;QAGN,MAAM;;;;;;QAId,MAAM;QACN,MAAM;YAAC;YAAQ;YAAkB;YAAO;YAAO;SAAU;;;;;;QAKzD,MAAM;QACN,MAAM;YAAC;YAAQ;YAAa;YAAe;YAAW;SAAU;QAChE,SAAS;;;;;;QAID,MAAM;QAAQ,UAAU;;;;;;QAGxB,MAAM;QAAO,UAAU;;;;;;QAGvB,MAAM;;;;;yKAGU,OAAS,KAAK,YAAY;QAAI,UAAU;QAAW,UAAU;;;QACzE,MAAM;;;;;;QAGA,MAAM;;;;;;QAGN,MAAM;;;;;;QAjDlB,MAAM","debugId":null}},
    {"offset": {"line": 2043, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data-source.ts"],"sourcesContent":["\nimport \"reflect-metadata\"; // Ensure this is the very first import\nimport { DataSource, type DataSourceOptions } from \"typeorm\";\nimport { UserEntity } from \"@/entities/user.entity\";\n// Entitas AccountEntity, SessionEntity, dan VerificationTokenEntity tidak lagi diimpor\n// karena sudah tidak digunakan setelah penghapusan NextAuth.js\nimport { MataPelajaranEntity } from \"@/entities/mata-pelajaran.entity\";\nimport { SklEntity } from \"@/entities/skl.entity\";\nimport { CpEntity } from \"@/entities/cp.entity\";\nimport { MateriKategoriEntity } from \"@/entities/materi-kategori.entity\";\nimport { MateriAjarEntity } from \"@/entities/materi-ajar.entity\";\nimport { StrukturKurikulumEntity } from \"@/entities/struktur-kurikulum.entity\";\nimport { SilabusEntity } from \"@/entities/silabus.entity\";\nimport { RppEntity } from \"@/entities/rpp.entity\";\nimport { RuanganEntity } from \"@/entities/ruangan.entity\";\nimport { SlotWaktuEntity } from \"@/entities/slot-waktu.entity\";\nimport { JadwalPelajaranEntity } from \"@/entities/jadwal-pelajaran.entity\";\nimport { TugasEntity } from \"@/entities/tugas.entity\";\nimport { TestEntity } from \"@/entities/test.entity\";\n\nexport const dataSourceOptions: DataSourceOptions = {\n  type: \"postgres\",\n  host: process.env.POSTGRES_HOST || \"localhost\",\n  port: Number(process.env.POSTGRES_PORT) || 5432,\n  username: process.env.POSTGRES_USER || \"postgres\",\n  password: process.env.POSTGRES_PASSWORD || \"password\",\n  database: process.env.POSTGRES_DB || \"educentral\",\n  synchronize: process.env.NODE_ENV === \"development\", \n  logging: process.env.NODE_ENV === \"development\" ? [\"query\", \"error\"] : [\"error\"],\n  entities: [\n    UserEntity,\n    // AccountEntity, // REMOVED - No longer used\n    // SessionEntity, // REMOVED - No longer used\n    // VerificationTokenEntity, // REMOVED - No longer used\n    MataPelajaranEntity,\n    SklEntity,\n    CpEntity,\n    MateriKategoriEntity,\n    MateriAjarEntity,\n    StrukturKurikulumEntity,\n    SilabusEntity,\n    RppEntity,\n    RuanganEntity,\n    SlotWaktuEntity,\n    JadwalPelajaranEntity,\n    TugasEntity,\n    TestEntity,\n  ],\n  migrations: [], \n  subscribers: [],\n};\n\nlet AppDataSource: DataSource | undefined = undefined;\n\nexport async function getInitializedDataSource(): Promise<DataSource> {\n  // If already initialized and connected, return it.\n  if (AppDataSource && AppDataSource.isInitialized) {\n    return AppDataSource;\n  }\n\n  // If AppDataSource exists but is not initialized (e.g., previous attempt failed)\n  // or if it doesn't exist, create a new instance.\n  const newDataSource = new DataSource(dataSourceOptions);\n  try {\n    console.log(\"Attempting to initialize DataSource...\");\n    await newDataSource.initialize();\n    AppDataSource = newDataSource; // Assign to global AppDataSource only after successful initialization\n    console.log(\"DataSource has been initialized successfully.\");\n    return AppDataSource;\n  } catch (err) {\n    console.error(\"Error during DataSource initialization:\", err);\n    // If initialization fails, ensure AppDataSource is reset so subsequent calls try fresh.\n    AppDataSource = undefined; \n    throw err; // Re-throw the error to be handled by the caller.\n  }\n}\n\n"],"names":[],"mappings":";;;;AACA,+PAA2B,uCAAuC;AAClE;AACA;AACA,uFAAuF;AACvF,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAEO,MAAM,oBAAuC;IAClD,MAAM;IACN,MAAM,QAAQ,GAAG,CAAC,aAAa,IAAI;IACnC,MAAM,OAAO,QAAQ,GAAG,CAAC,aAAa,KAAK;IAC3C,UAAU,QAAQ,GAAG,CAAC,aAAa,IAAI;IACvC,UAAU,QAAQ,GAAG,CAAC,iBAAiB,IAAI;IAC3C,UAAU,QAAQ,GAAG,CAAC,WAAW,IAAI;IACrC,aAAa,oDAAyB;IACtC,SAAS,uCAAyC;QAAC;QAAS;KAAQ;IACpE,UAAU;QACR,mIAAA,CAAA,aAAU;QACV,6CAA6C;QAC7C,6CAA6C;QAC7C,uDAAuD;QACvD,gJAAA,CAAA,sBAAmB;QACnB,kIAAA,CAAA,YAAS;QACT,iIAAA,CAAA,WAAQ;QACR,iJAAA,CAAA,uBAAoB;QACpB,6IAAA,CAAA,mBAAgB;QAChB,oJAAA,CAAA,0BAAuB;QACvB,sIAAA,CAAA,gBAAa;QACb,kIAAA,CAAA,YAAS;QACT,sIAAA,CAAA,gBAAa;QACb,4IAAA,CAAA,kBAAe;QACf,kJAAA,CAAA,wBAAqB;QACrB,oIAAA,CAAA,cAAW;QACX,mIAAA,CAAA,aAAU;KACX;IACD,YAAY,EAAE;IACd,aAAa,EAAE;AACjB;AAEA,IAAI,gBAAwC;AAErC,eAAe;IACpB,mDAAmD;IACnD,IAAI,iBAAiB,cAAc,aAAa,EAAE;QAChD,OAAO;IACT;IAEA,iFAAiF;IACjF,iDAAiD;IACjD,MAAM,gBAAgB,IAAI,mIAAA,CAAA,aAAU,CAAC;IACrC,IAAI;QACF,QAAQ,GAAG,CAAC;QACZ,MAAM,cAAc,UAAU;QAC9B,gBAAgB,eAAe,sEAAsE;QACrG,QAAQ,GAAG,CAAC;QACZ,OAAO;IACT,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,2CAA2C;QACzD,wFAAwF;QACxF,gBAAgB;QAChB,MAAM,KAAK,kDAAkD;IAC/D;AACF","debugId":null}},
    {"offset": {"line": 2143, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/auth-utils.ts"],"sourcesContent":["\nimport jwt from 'jsonwebtoken';\nimport cookie from 'cookie';\nimport type { NextRequest, NextResponse } from 'next/server';\nimport type { User } from '@/types'; // Using your simplified User type\nimport crypto from 'crypto';\n\nconst JWT_SECRET = process.env.JWT_SECRET || 'your-super-secret-jwt-key-please-change-this';\nconst JWT_EXPIRY = process.env.JWT_EXPIRY || '1d'; // e.g., 1 day\nexport const TOKEN_NAME = 'auth_token';\n\nexport interface UserPayload {\n  id: string;\n  email: string;\n  role: User['role'];\n  isVerified: boolean;\n  // Add other essential, non-sensitive fields you want in the token\n}\n\nexport function generateToken(user: Pick<User, 'id' | 'email' | 'role' | 'isVerified'>): string {\n  const payload: UserPayload = {\n    id: user.id,\n    email: user.email,\n    role: user.role,\n    isVerified: user.isVerified,\n  };\n  return jwt.sign(payload, JWT_SECRET, { expiresIn: JWT_EXPIRY });\n}\n\nexport function verifyToken(token: string): UserPayload | null {\n  try {\n    const decoded = jwt.verify(token, JWT_SECRET) as UserPayload;\n    return decoded;\n  } catch (error) {\n    console.error('Invalid token:', error);\n    return null;\n  }\n}\n\nexport function setTokenCookie(res: NextResponse, token: string): void {\n  const cookieOptions = {\n    httpOnly: true,\n    secure: process.env.NODE_ENV !== 'development',\n    maxAge: 60 * 60 * 24 * 1, // 1 day in seconds (matches default JWT_EXPIRY)\n    path: '/',\n    sameSite: 'lax' as const,\n  };\n  res.headers.append('Set-Cookie', cookie.serialize(TOKEN_NAME, token, cookieOptions));\n}\n\nexport function clearTokenCookie(res: NextResponse): void {\n  const cookieOptions = {\n    httpOnly: true,\n    secure: process.env.NODE_ENV !== 'development',\n    expires: new Date(0), // Set expiry to past date\n    path: '/',\n    sameSite: 'lax' as const,\n  };\n  res.headers.append('Set-Cookie', cookie.serialize(TOKEN_NAME, '', cookieOptions));\n}\n\nexport function getTokenFromRequest(req: NextRequest): string | null {\n  const cookies = req.cookies.get(TOKEN_NAME);\n  return cookies?.value || null;\n}\n\nexport function generateSecureToken(length = 32): string {\n  return crypto.randomBytes(length).toString('hex');\n}\n"],"names":[],"mappings":";;;;;;;;;AACA;AACA;AAGA;;;;AAEA,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU,IAAI;AAC7C,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU,IAAI,MAAM,cAAc;AAC1D,MAAM,aAAa;AAUnB,SAAS,cAAc,IAAwD;IACpF,MAAM,UAAuB;QAC3B,IAAI,KAAK,EAAE;QACX,OAAO,KAAK,KAAK;QACjB,MAAM,KAAK,IAAI;QACf,YAAY,KAAK,UAAU;IAC7B;IACA,OAAO,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC,SAAS,YAAY;QAAE,WAAW;IAAW;AAC/D;AAEO,SAAS,YAAY,KAAa;IACvC,IAAI;QACF,MAAM,UAAU,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO;QAClC,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kBAAkB;QAChC,OAAO;IACT;AACF;AAEO,SAAS,eAAe,GAAiB,EAAE,KAAa;IAC7D,MAAM,gBAAgB;QACpB,UAAU;QACV,QAAQ,oDAAyB;QACjC,QAAQ,KAAK,KAAK,KAAK;QACvB,MAAM;QACN,UAAU;IACZ;IACA,IAAI,OAAO,CAAC,MAAM,CAAC,cAAc,iIAAA,CAAA,UAAM,CAAC,SAAS,CAAC,YAAY,OAAO;AACvE;AAEO,SAAS,iBAAiB,GAAiB;IAChD,MAAM,gBAAgB;QACpB,UAAU;QACV,QAAQ,oDAAyB;QACjC,SAAS,IAAI,KAAK;QAClB,MAAM;QACN,UAAU;IACZ;IACA,IAAI,OAAO,CAAC,MAAM,CAAC,cAAc,iIAAA,CAAA,UAAM,CAAC,SAAS,CAAC,YAAY,IAAI;AACpE;AAEO,SAAS,oBAAoB,GAAgB;IAClD,MAAM,UAAU,IAAI,OAAO,CAAC,GAAG,CAAC;IAChC,OAAO,SAAS,SAAS;AAC3B;AAEO,SAAS,oBAAoB,SAAS,EAAE;IAC7C,OAAO,qGAAA,CAAA,UAAM,CAAC,WAAW,CAAC,QAAQ,QAAQ,CAAC;AAC7C","debugId":null}},
    {"offset": {"line": 2270, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/email-service.ts"],"sourcesContent":["\nimport nodemailer from 'nodemailer';\nimport { APP_NAME } from './constants';\n\ninterface MailOptions {\n  to: string;\n  subject: string;\n  html: string;\n  text?: string;\n}\n\n// Konfigurasi transporter Nodemailer\n// Anda HARUS mengisi variabel lingkungan ini di file .env.local atau konfigurasi server Anda\nconst transporter = nodemailer.createTransport({\n  host: process.env.SMTP_HOST,\n  port: Number(process.env.SMTP_PORT || 587), // Port umum untuk SMTP (587 untuk TLS, 465 untuk SSL)\n  secure: (process.env.SMTP_PORT === '465'), // true untuk port 465, false untuk port lain\n  auth: {\n    user: process.env.SMTP_USER, // User SMTP Anda\n    pass: process.env.SMTP_PASS, // Password SMTP Anda\n  },\n  // Aktifkan ini jika server SMTP Anda menggunakan sertifikat self-signed\n  // tls: {\n  //   rejectUnauthorized: false \n  // }\n});\n\nconst defaultEmailFrom = process.env.EMAIL_FROM || `noreply@${(process.env.NEXT_PUBLIC_APP_URL || \"example.com\").replace(/^https?:\\/\\//, '')}`;\n\n/**\n * Mengirim email.\n * @param mailOptions Opsi email (to, subject, html, text)\n */\nasync function sendMail({ to, subject, html, text }: MailOptions): Promise<void> {\n  try {\n    const info = await transporter.sendMail({\n      from: `\"${APP_NAME}\" <${defaultEmailFrom}>`,\n      to,\n      subject,\n      html,\n      text: text || html.replace(/<[^>]*>?/gm, ''), // Membuat versi teks biasa jika tidak disediakan\n    });\n    console.log('Email terkirim: %s', info.messageId);\n    // Anda bisa menyimpan info.messageId jika perlu untuk pelacakan\n  } catch (error) {\n    console.error('Error mengirim email:', error);\n    // Pertimbangkan untuk melempar error ini agar bisa ditangani di level API\n    // atau mengimplementasikan sistem retry/logging yang lebih canggih\n    throw new Error(`Gagal mengirim email ke ${to}: ${(error as Error).message}`);\n  }\n}\n\n/**\n * Mengirim email verifikasi akun.\n * @param to Alamat email penerima\n * @param name Nama pengguna (opsional)\n * @param verificationLink Tautan verifikasi\n */\nexport async function sendVerificationEmail(to: string, name: string | null | undefined, verificationLink: string): Promise<void> {\n  const subject = `Verifikasi Email Anda untuk ${APP_NAME}`;\n  const htmlContent = `\n    <div style=\"font-family: Arial, sans-serif; line-height: 1.6;\">\n      <h2 style=\"color: #333;\">Selamat Datang di ${APP_NAME}, ${name || 'Pengguna Baru'}!</h2>\n      <p>Terima kasih telah mendaftar. Silakan klik tautan di bawah ini untuk memverifikasi alamat email Anda:</p>\n      <p style=\"margin: 20px 0;\">\n        <a href=\"${verificationLink}\" \n           style=\"background-color: #007bff; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;\">\n          Verifikasi Email Saya\n        </a>\n      </p>\n      <p>Jika Anda tidak bisa mengklik tombol di atas, salin dan tempel URL berikut ke browser Anda:</p>\n      <p><a href=\"${verificationLink}\">${verificationLink}</a></p>\n      <p>Jika Anda tidak mendaftar untuk akun ini, Anda bisa mengabaikan email ini.</p>\n      <hr style=\"border: none; border-top: 1px solid #eee; margin: 20px 0;\" />\n      <p style=\"font-size: 0.9em; color: #777;\">Email ini dikirim secara otomatis. Mohon jangan membalas email ini.</p>\n    </div>\n  `;\n\n  await sendMail({\n    to,\n    subject,\n    html: htmlContent,\n  });\n}\n\n/**\n * Mengirim email reset kata sandi.\n * @param to Alamat email penerima\n * @param resetLink Tautan reset kata sandi\n */\nexport async function sendPasswordResetEmail(to: string, resetLink: string): Promise<void> {\n  const subject = `Reset Kata Sandi Akun ${APP_NAME} Anda`;\n  const htmlContent = `\n    <div style=\"font-family: Arial, sans-serif; line-height: 1.6;\">\n      <h2 style=\"color: #333;\">Permintaan Reset Kata Sandi</h2>\n      <p>Kami menerima permintaan untuk mereset kata sandi akun Anda di ${APP_NAME}.</p>\n      <p>Silakan klik tautan di bawah ini untuk membuat kata sandi baru:</p>\n      <p style=\"margin: 20px 0;\">\n        <a href=\"${resetLink}\" \n           style=\"background-color: #007bff; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;\">\n          Reset Kata Sandi\n        </a>\n      </p>\n      <p>Tautan ini akan kedaluwarsa dalam 1 jam.</p>\n      <p>Jika Anda tidak meminta reset kata sandi, abaikan email ini.</p>\n      <hr style=\"border: none; border-top: 1px solid #eee; margin: 20px 0;\" />\n      <p style=\"font-size: 0.9em; color: #777;\">Email ini dikirim secara otomatis. Mohon jangan membalas email ini.</p>\n    </div>\n  `;\n\n  await sendMail({\n    to,\n    subject,\n    html: htmlContent,\n  });\n}\n"],"names":[],"mappings":";;;;AACA;AACA;;;AASA,qCAAqC;AACrC,6FAA6F;AAC7F,MAAM,cAAc,iJAAA,CAAA,UAAU,CAAC,eAAe,CAAC;IAC7C,MAAM,QAAQ,GAAG,CAAC,SAAS;IAC3B,MAAM,OAAO,QAAQ,GAAG,CAAC,SAAS,IAAI;IACtC,QAAS,QAAQ,GAAG,CAAC,SAAS,KAAK;IACnC,MAAM;QACJ,MAAM,QAAQ,GAAG,CAAC,SAAS;QAC3B,MAAM,QAAQ,GAAG,CAAC,SAAS;IAC7B;AAKF;AAEA,MAAM,mBAAmB,QAAQ,GAAG,CAAC,UAAU,IAAI,CAAC,QAAQ,EAAE,CAAC,6DAAmC,aAAa,EAAE,OAAO,CAAC,gBAAgB,KAAK;AAE9I;;;CAGC,GACD,eAAe,SAAS,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAe;IAC9D,IAAI;QACF,MAAM,OAAO,MAAM,YAAY,QAAQ,CAAC;YACtC,MAAM,CAAC,CAAC,EAAE,yHAAA,CAAA,WAAQ,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC;YAC3C;YACA;YACA;YACA,MAAM,QAAQ,KAAK,OAAO,CAAC,cAAc;QAC3C;QACA,QAAQ,GAAG,CAAC,sBAAsB,KAAK,SAAS;IAChD,gEAAgE;IAClE,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,0EAA0E;QAC1E,mEAAmE;QACnE,MAAM,IAAI,MAAM,CAAC,wBAAwB,EAAE,GAAG,EAAE,EAAE,AAAC,MAAgB,OAAO,EAAE;IAC9E;AACF;AAQO,eAAe,sBAAsB,EAAU,EAAE,IAA+B,EAAE,gBAAwB;IAC/G,MAAM,UAAU,CAAC,4BAA4B,EAAE,yHAAA,CAAA,WAAQ,EAAE;IACzD,MAAM,cAAc,CAAC;;iDAE0B,EAAE,yHAAA,CAAA,WAAQ,CAAC,EAAE,EAAE,QAAQ,gBAAgB;;;iBAGvE,EAAE,iBAAiB;;;;;;kBAMlB,EAAE,iBAAiB,EAAE,EAAE,iBAAiB;;;;;EAKxD,CAAC;IAED,MAAM,SAAS;QACb;QACA;QACA,MAAM;IACR;AACF;AAOO,eAAe,uBAAuB,EAAU,EAAE,SAAiB;IACxE,MAAM,UAAU,CAAC,sBAAsB,EAAE,yHAAA,CAAA,WAAQ,CAAC,KAAK,CAAC;IACxD,MAAM,cAAc,CAAC;;;wEAGiD,EAAE,yHAAA,CAAA,WAAQ,CAAC;;;iBAGlE,EAAE,UAAU;;;;;;;;;;EAU3B,CAAC;IAED,MAAM,SAAS;QACb;QACA;QACA,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 2367, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/auth/register/route.ts"],"sourcesContent":["\nimport \"reflect-metadata\";\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { getInitializedDataSource } from \"@/lib/data-source\";\nimport { UserEntity } from \"@/entities/user.entity\";\nimport bcrypt from \"bcryptjs\";\nimport * as z from \"zod\";\nimport { generateSecureToken } from \"@/lib/auth-utils\";\nimport { sendVerificationEmail } from \"@/lib/email-service\"; // Import layanan email\nimport type { Role } from \"@/types\";\n\nconst registerSchema = z.object({\n  email: z.string().email({ message: \"Alamat email tidak valid.\" }),\n  password: z.string().min(6, { message: \"Kata sandi minimal 6 karakter.\" }),\n  // fullName: z.string().min(2, { message: \"Nama lengkap minimal 2 karakter.\" }).optional(), // Dihapus, akan diambil dari email jika tidak ada\n});\n\nexport async function POST(request: NextRequest) {\n  console.log(\"Register API: Menerima permintaan.\");\n  try {\n    const body = await request.json();\n    console.log(\"Register API: Body permintaan:\", body);\n    const validation = registerSchema.safeParse(body);\n\n    if (!validation.success) {\n      console.error(\"Register API: Validasi gagal.\", validation.error.flatten().fieldErrors);\n      return NextResponse.json({ message: \"Input tidak valid.\", errors: validation.error.flatten().fieldErrors }, { status: 400 });\n    }\n\n    const { email, password } = validation.data;\n    console.log(`Register API: Memproses registrasi untuk ${email}`);\n\n    console.log(\"Register API: Menginisialisasi data source...\");\n    const dataSource = await getInitializedDataSource();\n    console.log(\"Register API: Data source terinisialisasi.\");\n    const userRepo = dataSource.getRepository(UserEntity);\n\n    console.log(`Register API: Mengecek apakah pengguna ${email} sudah ada...`);\n    const existingUser = await userRepo.findOne({ where: { email } });\n    if (existingUser) {\n      console.warn(`Register API: Pengguna ${email} sudah terdaftar.`);\n      return NextResponse.json({ message: \"Email sudah terdaftar.\" }, { status: 409 });\n    }\n    console.log(`Register API: Pengguna ${email} belum terdaftar. Melanjutkan.`);\n\n    console.log(`Register API: Melakukan hashing kata sandi untuk ${email}...`);\n    const hashedPassword = await bcrypt.hash(password, 10);\n    console.log(`Register API: Kata sandi untuk ${email} berhasil di-hash.`);\n    const verificationToken = generateSecureToken();\n    const verificationTokenExpires = new Date(Date.now() + 24 * 60 * 60 * 1000); // Token valid for 24 hours\n\n    const newUserPayload = {\n      email,\n      passwordHash: hashedPassword,\n      role: 'siswa' as Role, // Pastikan tipe Role benar\n      isVerified: false, \n      name: email.split('@')[0], \n      fullName: email.split('@')[0], \n      joinDate: new Date().toISOString().split('T')[0],\n      emailVerificationToken: verificationToken,\n      emailVerificationTokenExpires: verificationTokenExpires,\n    };\n    console.log(`Register API: Membuat entitas pengguna baru untuk ${email} dengan payload:`, newUserPayload);\n    const newUser = userRepo.create(newUserPayload);\n\n    console.log(`Register API: Menyimpan pengguna baru ${email} ke database...`);\n    await userRepo.save(newUser);\n    console.log(`Register API: Pengguna ${email} berhasil disimpan dengan ID ${newUser.id}.`);\n\n    const appUrl = process.env.NEXT_PUBLIC_APP_URL;\n    if (!appUrl) {\n        console.error(\"Register API: Variabel NEXT_PUBLIC_APP_URL tidak diatur! Link verifikasi mungkin tidak lengkap.\");\n        // Pertimbangkan untuk melempar error atau mengembalikan pesan spesifik jika ini kritis\n    }\n    const verificationLink = `${appUrl || 'http://localhost:3000'}/api/auth/verify-email?token=${verificationToken}`;\n    \n    console.log(`Register API: Mencoba mengirim email verifikasi ke ${newUser.email}...`);\n    try {\n      await sendVerificationEmail(newUser.email, newUser.fullName, verificationLink);\n      console.log(`Register API: Email verifikasi berhasil dikirim ke ${newUser.email}.`);\n    } catch (emailError: any) {\n      console.error(`Register API: Gagal mengirim email verifikasi ke ${newUser.email}. Error:`, emailError.message, emailError.stack);\n      // Jika pengiriman email gagal, seluruh proses registrasi akan gagal karena error ini dilempar\n      throw new Error(`Pengiriman email gagal: ${emailError.message}`);\n    }\n    \n    console.log(`Register API: Registrasi untuk ${email} berhasil. Mengembalikan status 201.`);\n    return NextResponse.json({ \n      message: \"Pendaftaran berhasil. Silakan cek email Anda untuk verifikasi.\", \n      userId: newUser.id \n    }, { status: 201 });\n\n  } catch (error: any) {\n    console.error(\"Register API: Error tidak tertangani di POST /api/auth/register:\", error.message, error.stack);\n    return NextResponse.json({ message: \"Terjadi kesalahan internal server.\" }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}