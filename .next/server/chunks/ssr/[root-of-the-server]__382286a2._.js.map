{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 474, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/supabaseClient.ts"],"sourcesContent":["import { createClient, type SupabaseClient } from '@supabase/supabase-js';\nimport type { Database } from '@/types/supabase'; // Will be generated by Supabase CLI later or defined manually\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\nif (!supabaseUrl) {\n  throw new Error(\"Missing env.NEXT_PUBLIC_SUPABASE_URL\");\n}\nif (!supabaseAnonKey) {\n  throw new Error(\"Missing env.NEXT_PUBLIC_SUPABASE_ANON_KEY\");\n}\n\n// We are using Database type for better type safety with Supabase.\n// You can generate this type using `supabase gen types typescript --project-id <your-project-id> --schema public > src/types/supabase.ts`\n// For now, we'll use a generic SupabaseClient. If you define Database types later, you can use:\n// export const supabase = createClient<Database>(supabaseUrl, supabaseAnonKey);\nexport const supabase: SupabaseClient = createClient(supabaseUrl, supabaseAnonKey);\n"],"names":[],"mappings":";;;AAAA;;AAGA,MAAM;AACN,MAAM;AAEN,uCAAkB;;AAElB;AACA,uCAAsB;;AAEtB;AAMO,MAAM,WAA2B,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 494, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/constants.ts"],"sourcesContent":["import type { Role } from '@/types';\nimport { LayoutDashboard, Users, BarChart3, Bell, Settings, UserPlus, LogOut, ShieldCheck, VerifiedIcon } from 'lucide-react';\n\nexport const APP_NAME = 'EduCentral';\n\nexport const ROLES: Record<Role, string> = {\n  admin: 'Admin',\n  guru: 'Guru',\n  siswa: 'Siswa',\n  pimpinan: 'Pimpinan',\n  superadmin: 'Super Admin',\n};\n\nexport const ROUTES = {\n  HOME: '/',\n  LOGIN: '/login',\n  REGISTER: '/register',\n  VERIFY_EMAIL: '/verify-email',\n  ADMIN_DASHBOARD: '/admin/dashboard',\n  ADMIN_USERS: '/admin/users',\n  GURU_DASHBOARD: '/guru/dashboard',\n  SISWA_DASHBOARD: '/siswa/dashboard',\n  PIMPINAN_DASHBOARD: '/pimpinan/dashboard',\n  DATA_VISUALIZATION: '/data-visualization',\n  NOTIFICATIONS: '/notifications', // Placeholder for a dedicated notifications page\n  SETTINGS: '/settings', // Placeholder\n};\n\nexport const NAV_LINKS_CONFIG = [\n  { href: ROUTES.ADMIN_DASHBOARD, label: 'Dashboard', icon: LayoutDashboard, roles: ['admin', 'superadmin'] as Role[] },\n  { href: ROUTES.GURU_DASHBOARD, label: 'Dashboard', icon: LayoutDashboard, roles: ['guru'] as Role[] },\n  { href: ROUTES.SISWA_DASHBOARD, label: 'Dashboard', icon: LayoutDashboard, roles: ['siswa'] as Role[] },\n  { href: ROUTES.PIMPINAN_DASHBOARD, label: 'Dashboard', icon: LayoutDashboard, roles: ['pimpinan'] as Role[] },\n  \n  { href: ROUTES.ADMIN_USERS, label: 'User Management', icon: Users, roles: ['admin', 'superadmin'] as Role[] },\n  { href: ROUTES.DATA_VISUALIZATION, label: 'Data Visualization', icon: BarChart3, roles: ['admin', 'guru', 'siswa', 'pimpinan', 'superadmin'] as Role[] },\n  // { href: ROUTES.NOTIFICATIONS, label: 'Notifications', icon: Bell, roles: ['admin', 'guru', 'siswa', 'pimpinan', 'superadmin'] as Role[] },\n  // { href: ROUTES.SETTINGS, label: 'Settings', icon: Settings, roles: ['admin', 'guru', 'siswa', 'pimpinan', 'superadmin'] as Role[] },\n];\n\nexport const USER_NAV_ITEMS = [\n    // { href: ROUTES.SETTINGS, label: 'Settings', icon: Settings },\n    { href: ROUTES.LOGIN, label: 'Logout', icon: LogOut, action: 'logout' },\n];\n\nexport const DEFAULT_USERS_STORAGE_KEY = 'educentral_users';\nexport const AUTH_USER_STORAGE_KEY = 'educentral_auth_user';\n"],"names":[],"mappings":";;;;;;;;;AACA;AAAA;AAAA;AAAA;;AAEO,MAAM,WAAW;AAEjB,MAAM,QAA8B;IACzC,OAAO;IACP,MAAM;IACN,OAAO;IACP,UAAU;IACV,YAAY;AACd;AAEO,MAAM,SAAS;IACpB,MAAM;IACN,OAAO;IACP,UAAU;IACV,cAAc;IACd,iBAAiB;IACjB,aAAa;IACb,gBAAgB;IAChB,iBAAiB;IACjB,oBAAoB;IACpB,oBAAoB;IACpB,eAAe;IACf,UAAU;AACZ;AAEO,MAAM,mBAAmB;IAC9B;QAAE,MAAM,OAAO,eAAe;QAAE,OAAO;QAAa,MAAM,4NAAA,CAAA,kBAAe;QAAE,OAAO;YAAC;YAAS;SAAa;IAAW;IACpH;QAAE,MAAM,OAAO,cAAc;QAAE,OAAO;QAAa,MAAM,4NAAA,CAAA,kBAAe;QAAE,OAAO;YAAC;SAAO;IAAW;IACpG;QAAE,MAAM,OAAO,eAAe;QAAE,OAAO;QAAa,MAAM,4NAAA,CAAA,kBAAe;QAAE,OAAO;YAAC;SAAQ;IAAW;IACtG;QAAE,MAAM,OAAO,kBAAkB;QAAE,OAAO;QAAa,MAAM,4NAAA,CAAA,kBAAe;QAAE,OAAO;YAAC;SAAW;IAAW;IAE5G;QAAE,MAAM,OAAO,WAAW;QAAE,OAAO;QAAmB,MAAM,oMAAA,CAAA,QAAK;QAAE,OAAO;YAAC;YAAS;SAAa;IAAW;IAC5G;QAAE,MAAM,OAAO,kBAAkB;QAAE,OAAO;QAAsB,MAAM,kNAAA,CAAA,YAAS;QAAE,OAAO;YAAC;YAAS;YAAQ;YAAS;YAAY;SAAa;IAAW;CAGxJ;AAEM,MAAM,iBAAiB;IAC1B,gEAAgE;IAChE;QAAE,MAAM,OAAO,KAAK;QAAE,OAAO;QAAU,MAAM,0MAAA,CAAA,SAAM;QAAE,QAAQ;IAAS;CACzE;AAEM,MAAM,4BAA4B;AAClC,MAAM,wBAAwB","debugId":null}},
    {"offset": {"line": 603, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-auth.ts"],"sourcesContent":["// This file needs to be renamed to use-auth.tsx because it uses JSX for Context Provider\n// For now, I am providing the content as if it were already renamed.\n// The build system might still complain until the file is actually renamed to .tsx\n\"use client\";\n\nimport React, { useState, useEffect, createContext, useContext, useCallback } from 'react';\nimport { useRouter } from 'next/navigation';\nimport type { User, Role } from '@/types';\nimport { supabase } from '@/lib/supabaseClient';\nimport { useToast } from '@/hooks/use-toast';\nimport { ROUTES, ROLES, APP_NAME } from '@/lib/constants';\nimport type { AuthError, Session, User as SupabaseAuthUser } from '@supabase/supabase-js';\n\ninterface ProfileData {\n  id: string;\n  name?: string | null;\n  role: Role;\n  avatar_url?: string | null;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  login: (email: string, passwordAttempt: string) => Promise<{ success: boolean; error?: AuthError | null }>;\n  register: (email: string, passwordAttempt: string, fullName?: string) => Promise<{ success: boolean; error?: AuthError | null; requiresConfirmation?: boolean }>;\n  logout: () => Promise<void>;\n  isLoading: boolean;\n  session: Session | null;\n  // Admin user management functions are removed for now, will be re-added with Supabase backend logic\n  // verifyUserEmail, createUser, updateUserRole, deleteUser\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [session, setSession] = useState<Session | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const router = useRouter();\n  const { toast } = useToast();\n\n  const fetchUserProfile = useCallback(async (supabaseUser: SupabaseAuthUser): Promise<User | null> => {\n    try {\n      const { data: profile, error } = await supabase\n        .from('profiles')\n        .select('id, name, role, avatar_url')\n        .eq('id', supabaseUser.id)\n        .single();\n\n      if (error) {\n        // If profile doesn't exist (e.g. trigger hasn't run yet or failed), this can happen.\n        // It's important to handle this case. For now, log and return a basic user.\n        console.error('Error fetching profile:', error.message);\n        toast({ title: \"Profile Error\", description: \"Could not fetch user profile. Please try again.\", variant: \"destructive\" });\n         // Fallback user object if profile fetch fails or doesn't exist\n        return {\n          id: supabaseUser.id,\n          email: supabaseUser.email,\n          role: 'siswa', // Default or make it undefined and handle UI\n          isVerified: !!supabaseUser.email_confirmed_at,\n          name: supabaseUser.email?.split('@')[0]\n        };\n      }\n\n      if (profile) {\n        return {\n          id: profile.id,\n          email: supabaseUser.email,\n          name: profile.name,\n          role: profile.role as Role, // Ensure 'role' in profiles table matches Role type\n          avatarUrl: profile.avatar_url,\n          isVerified: !!supabaseUser.email_confirmed_at,\n        };\n      }\n      return null; // Should not happen if trigger works and row exists\n    } catch (e: any) {\n      console.error('Exception fetching profile:', e.message);\n      return null;\n    }\n  }, [toast]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const { data: authListener } = supabase.auth.onAuthStateChange(async (_event, session) => {\n      setSession(session);\n      if (session?.user) {\n        const profile = await fetchUserProfile(session.user);\n        setUser(profile);\n      } else {\n        setUser(null);\n      }\n      setIsLoading(false);\n    });\n\n    // Check initial session\n    supabase.auth.getSession().then(async ({ data: { session: initialSession } }) => {\n      if (initialSession?.user) {\n        const profile = await fetchUserProfile(initialSession.user);\n        setUser(profile);\n      }\n      setIsLoading(false);\n    });\n    \n\n    return () => {\n      authListener?.subscription.unsubscribe();\n    };\n  }, [fetchUserProfile]);\n\n  const login = async (email: string, passwordAttempt: string): Promise<{ success: boolean; error?: AuthError | null }> => {\n    setIsLoading(true);\n    const { data, error } = await supabase.auth.signInWithPassword({ email, password: passwordAttempt });\n    setIsLoading(false);\n\n    if (error) {\n      toast({ title: \"Login Failed\", description: error.message, variant: \"destructive\" });\n      return { success: false, error };\n    }\n    if (data.user) {\n       const profile = await fetchUserProfile(data.user);\n       setUser(profile); // Set user immediately for faster UI update\n      if (profile) {\n        toast({ title: \"Login Successful\", description: `Welcome back, ${profile.name || profile.email}!` });\n         // Redirection handled by useEffect in pages based on user state\n        return { success: true };\n      } else {\n        // This case means login was successful but profile fetching failed.\n        // User is technically logged in with Supabase, but app user state might be incomplete.\n        toast({ title: \"Login Succeeded, Profile Error\", description: \"Could not load full user profile.\", variant: \"destructive\" });\n        return { success: true }; // Still a success in terms of auth\n      }\n    }\n    return { success: false }; // Should not reach here if no error and no user\n  };\n\n  const register = async (email: string, passwordAttempt: string, fullName?: string): Promise<{ success: boolean; error?: AuthError | null; requiresConfirmation?: boolean }> => {\n    setIsLoading(true);\n    const { data, error } = await supabase.auth.signUp({\n      email,\n      password: passwordAttempt,\n      options: {\n        data: {\n          full_name: fullName, // This will be available in new.raw_user_meta_data for the trigger\n        }\n      }\n    });\n    setIsLoading(false);\n\n    if (error) {\n      toast({ title: \"Registration Failed\", description: error.message, variant: \"destructive\" });\n      return { success: false, error };\n    }\n\n    // data.user will exist if signup is successful.\n    // data.session will be null if email confirmation is required.\n    // The handle_new_user trigger should create the profile.\n    if (data.user) {\n      const requiresConfirmation = !data.session; // session is null if email confirmation is pending\n      if (requiresConfirmation) {\n        toast({ title: \"Registration Successful!\", description: \"Please check your email to verify your account.\" });\n      } else {\n        // This case implies auto-confirmation or email already confirmed.\n        // Fetch profile to update local user state.\n        const profile = await fetchUserProfile(data.user);\n        setUser(profile);\n        toast({ title: \"Registration Successful!\", description: `Welcome to ${APP_NAME}!` });\n      }\n      return { success: true, requiresConfirmation };\n    }\n    \n    return { success: false }; // Fallback\n  };\n\n  const logout = async () => {\n    setIsLoading(true);\n    await supabase.auth.signOut();\n    setUser(null);\n    setSession(null);\n    router.push(ROUTES.LOGIN); // Force redirect to login after sign out\n    toast({ title: \"Logged Out\", description: \"You have been successfully logged out.\" });\n    setIsLoading(false);\n  };\n  \n  // Placeholder for admin functions - these will need backend logic with Supabase\n  // const verifyUserEmail = (userId: string) => { /* ... */ };\n  // const createUser = (userData: ...) => { /* ... */ };\n  // const updateUserRole = (userId: string, newRole: Role) => { /* ... */ };\n  // const deleteUser = (userId: string) => { /* ... */ };\n\n  // Note: The 'users' array (list of all users for admin panel) is removed.\n  // This functionality will need to be reimplemented by fetching from Supabase, likely with admin privileges.\n\n  const authContextValue: AuthContextType = { \n    user, \n    login, \n    register, \n    logout, \n    isLoading,\n    session\n  };\n\n  return React.createElement(AuthContext.Provider, { value: authContextValue }, children);\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 836, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/auth/auth-form.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport * as z from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\"; // Not directly used, but good to keep if needed\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { useAuth } from \"@/hooks/use-auth\";\nimport Link from \"next/link\";\nimport { ROUTES, APP_NAME } from \"@/lib/constants\";\nimport { Loader2 } from \"lucide-react\";\nimport { useRouter } from \"next/navigation\"; // For redirecting after actions\n\nconst loginSchema = z.object({\n  email: z.string().email({ message: \"Invalid email address.\" }),\n  password: z.string().min(1, { message: \"Password is required.\" }), // Min 1 for login\n});\n\nconst registerSchema = z.object({\n  fullName: z.string().min(2, { message: \"Full name must be at least 2 characters.\" }).optional(),\n  email: z.string().email({ message: \"Invalid email address.\" }),\n  password: z.string().min(6, { message: \"Password must be at least 6 characters.\" }),\n});\n\ntype AuthFormProps = {\n  mode: \"login\" | \"register\";\n};\n\nexport function AuthForm({ mode }: AuthFormProps) {\n  const { login, register, isLoading } = useAuth();\n  const router = useRouter();\n  const [formError, setFormError] = React.useState<string | null>(null);\n\n  const currentSchema = mode === \"login\" ? loginSchema : registerSchema;\n\n  const form = useForm<z.infer<typeof currentSchema>>({\n    resolver: zodResolver(currentSchema),\n    defaultValues: {\n      email: \"\",\n      password: \"\",\n      ...(mode === \"register\" && { fullName: \"\" }),\n    },\n  });\n\n  async function onSubmit(values: z.infer<typeof currentSchema>) {\n    setFormError(null);\n    if (mode === \"login\") {\n      const result = await login(values.email, values.password);\n      if (result.success) {\n        // Successful login redirection is handled by useEffect in LoginPageContent based on user role & verification\n        // No direct router.push here needed usually.\n      } else if (result.error) {\n        setFormError(result.error.message || \"Invalid credentials.\");\n      } else {\n        setFormError(\"An unknown error occurred during login.\");\n      }\n    } else { // mode === \"register\"\n      // Explicitly cast values for register to include fullName\n      const registerValues = values as z.infer<typeof registerSchema>;\n      const result = await register(registerValues.email, registerValues.password, registerValues.fullName);\n      if (result.success) {\n        if (result.requiresConfirmation) {\n          router.push(ROUTES.VERIFY_EMAIL); // Redirect to a page explaining to check email\n        } else {\n          // If no confirmation needed (e.g. auto-confirm enabled or already confirmed), redirect based on role\n          // This might be handled by a global listener or effect in RegisterPageContent\n          // For now, let's assume a default redirect or rely on global state change\n          // router.push(ROUTES.SISWA_DASHBOARD); // Example, actual redirect might vary\n        }\n      } else if (result.error) {\n        setFormError(result.error.message || \"Registration failed.\");\n      } else {\n        setFormError(\"An unknown error occurred during registration.\");\n      }\n    }\n  }\n\n  return (\n    <div className=\"flex min-h-screen items-center justify-center bg-background p-4\">\n      <Card className=\"w-full max-w-md shadow-xl\">\n        <CardHeader className=\"text-center\">\n          <CardTitle className=\"text-3xl font-headline text-primary\">{APP_NAME}</CardTitle>\n          <CardDescription className=\"text-muted-foreground\">\n            {mode === \"login\" ? \"Sign in to your account\" : \"Create a new account\"}\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n              {mode === \"register\" && (\n                <FormField\n                  control={form.control}\n                  name=\"fullName\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Full Name</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"John Doe\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              )}\n              <FormField\n                control={form.control}\n                name=\"email\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Email</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"you@example.com\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"password\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Password</FormLabel>\n                    <FormControl>\n                      <Input type=\"password\" placeholder=\"••••••••\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              {formError && <p className=\"text-sm font-medium text-destructive\">{formError}</p>}\n              <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n                {isLoading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                {mode === \"login\" ? \"Sign In\" : \"Create Account\"}\n              </Button>\n            </form>\n          </Form>\n          <div className=\"mt-6 text-center text-sm\">\n            {mode === \"login\" ? (\n              <>\n                Don&apos;t have an account?{\" \"}\n                <Link href={ROUTES.REGISTER} className=\"font-medium text-primary hover:underline\">\n                  Sign up\n                </Link>\n              </>\n            ) : (\n              <>\n                Already have an account?{\" \"}\n                <Link href={ROUTES.LOGIN} className=\"font-medium text-primary hover:underline\">\n                  Sign in\n                </Link>\n              </>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1197, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/login/page.tsx"],"sourcesContent":["\n\"use client\";\nimport { AuthForm } from \"@/components/auth/auth-form\";\nimport { AuthProvider, useAuth } from \"@/hooks/use-auth\";\nimport { useRouter } from \"next/navigation\";\nimport { useEffect } from \"react\";\nimport { ROUTES } from \"@/lib/constants\";\nimport { Loader2 } from \"lucide-react\";\n\nfunction LoginPageContent() {\n  const { user, isLoading, session } = useAuth();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (!isLoading && user && session) { // Check for session as well\n      // Redirect based on role\n      switch (user.role) {\n        case 'admin': router.push(ROUTES.ADMIN_DASHBOARD); break;\n        case 'guru': router.push(ROUTES.GURU_DASHBOARD); break;\n        case 'siswa': \n          // With Supabase, email verification is typically handled by Supabase itself.\n          // If email confirmation is required and not done, Supabase login might fail or return a user without a session.\n          // Or, if login is successful but profile indicates unverified, this check remains.\n          if (user.isVerified) router.push(ROUTES.SISWA_DASHBOARD);\n          else {\n            // This scenario might change. If Supabase requires email confirmation,\n            // login might not succeed until confirmed. If it does succeed but isVerified is false,\n            // it implies profile fetched before email_confirmed_at was set.\n            // For now, let's assume if user object exists but isVerified is false, redirect.\n            toast({ title: \"Verification Required\", description: \"Please check your email to verify your account before logging in.\" });\n            // Potentially redirect to a page that says \"check your email\" or just stay on login.\n            // For simplicity, we are not redirecting to a dedicated verify-email page on login attempt if not verified.\n            // The register flow will handle the \"check your email\" message.\n            // Logging out here to prevent being stuck in a redirect loop if login somehow succeeds.\n            // supabase.auth.signOut(); // Or handle this state more gracefully.\n          }\n          break;\n        case 'pimpinan': router.push(ROUTES.PIMPINAN_DASHBOARD); break;\n        case 'superadmin': router.push(ROUTES.ADMIN_DASHBOARD); break;\n        default: router.push(ROUTES.HOME);\n      }\n    }\n  }, [user, isLoading, session, router]);\n\n  if (isLoading || (!isLoading && user && session)) { // Check for session\n    return (\n      <div className=\"flex min-h-screen items-center justify-center\">\n        <Loader2 className=\"h-12 w-12 animate-spin text-primary\" />\n      </div>\n    );\n  }\n  \n  return <AuthForm mode=\"login\" />;\n}\n\n\nexport default function LoginPage() {\n  return (\n    <AuthProvider>\n      <LoginPageContent />\n    </AuthProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;;AAQA,SAAS;IACP,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,UAAO,AAAD;IAC3C,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,aAAa,QAAQ,SAAS;YACjC,yBAAyB;YACzB,OAAQ,KAAK,IAAI;gBACf,KAAK;oBAAS,OAAO,IAAI,CAAC,uHAAA,CAAA,SAAM,CAAC,eAAe;oBAAG;gBACnD,KAAK;oBAAQ,OAAO,IAAI,CAAC,uHAAA,CAAA,SAAM,CAAC,cAAc;oBAAG;gBACjD,KAAK;oBACH,6EAA6E;oBAC7E,gHAAgH;oBAChH,mFAAmF;oBACnF,IAAI,KAAK,UAAU,EAAE,OAAO,IAAI,CAAC,uHAAA,CAAA,SAAM,CAAC,eAAe;yBAClD;wBACH,uEAAuE;wBACvE,uFAAuF;wBACvF,gEAAgE;wBAChE,iFAAiF;wBACjF,MAAM;4BAAE,OAAO;4BAAyB,aAAa;wBAAoE;oBACzH,qFAAqF;oBACrF,4GAA4G;oBAC5G,gEAAgE;oBAChE,wFAAwF;oBACxF,oEAAoE;oBACtE;oBACA;gBACF,KAAK;oBAAY,OAAO,IAAI,CAAC,uHAAA,CAAA,SAAM,CAAC,kBAAkB;oBAAG;gBACzD,KAAK;oBAAc,OAAO,IAAI,CAAC,uHAAA,CAAA,SAAM,CAAC,eAAe;oBAAG;gBACxD;oBAAS,OAAO,IAAI,CAAC,uHAAA,CAAA,SAAM,CAAC,IAAI;YAClC;QACF;IACF,GAAG;QAAC;QAAM;QAAW;QAAS;KAAO;IAErC,IAAI,aAAc,CAAC,aAAa,QAAQ,SAAU;QAChD,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,iNAAA,CAAA,UAAO;gBAAC,WAAU;;;;;;;;;;;IAGzB;IAEA,qBAAO,8OAAC,0IAAA,CAAA,WAAQ;QAAC,MAAK;;;;;;AACxB;AAGe,SAAS;IACtB,qBACE,8OAAC,2HAAA,CAAA,eAAY;kBACX,cAAA,8OAAC;;;;;;;;;;AAGP","debugId":null}}]
}